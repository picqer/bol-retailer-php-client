<?php

namespace Picqer\BolRetailerV9\Model;

// This class is auto generated by OpenApi\ModelGenerator
class CatalogProduct extends AbstractModel
{
    /**
     * Returns the definition of the model: an associative array with field names as key and
     * field definition as value. The field definition contains of
     * model: Model class or null if it is a scalar type
     * array: Boolean whether it is an array
     * @return array The model definition
     */
    public function getModelDefinition(): array
    {
        return [
            'published' => [ 'model' => null, 'array' => false ],
            'gpc' => [ 'model' => Gpc::class, 'array' => false ],
            'enrichment' => [ 'model' => Enrichment::class, 'array' => false ],
            'attributes' => [ 'model' => Attributes::class, 'array' => true ],
            'parties' => [ 'model' => Party::class, 'array' => true ],
            'audioTracks' => [ 'model' => AudioTracks::class, 'array' => true ],
            'series' => [ 'model' => Serie::class, 'array' => true ],
        ];
    }

    /**
     * @var bool Indicates whether the product meets the minimum requirements for publishing to the webshop.
     */
    public $published;

    /**
     * @var Gpc
     */
    public $gpc;

    /**
     * @var Enrichment
     */
    public $enrichment;

    /**
     * @var Attributes[]
     */
    public $attributes = [];

    /**
     * @var Party[]
     */
    public $parties = [];

    /**
     * @var AudioTracks[]
     */
    public $audioTracks = [];

    /**
     * @var Serie[]
     */
    public $series = [];

    /**
     * Returns chunkId from gpc.
     * @return string ChunkId from gpc.
     */
    public function getGpcChunkId(): string
    {
        return $this->gpc->chunkId;
    }

    /**
     * Sets gpc by chunkId.
     * @param string $chunkId ChunkId for gpc.
     */
    public function setGpcChunkId(string $chunkId): void
    {
        $this->gpc = Gpc::constructFromArray(['chunkId' => $chunkId]);
    }

    /**
     * Returns status from enrichment.
     * @return int Status from enrichment.
     */
    public function getEnrichmentStatus(): int
    {
        return $this->enrichment->status;
    }

    /**
     * Sets enrichment by status.
     * @param int $status Status for enrichment.
     */
    public function setEnrichmentStatus(int $status): void
    {
        $this->enrichment = Enrichment::constructFromArray(['status' => $status]);
    }

    /**
     * Returns an array with the names from series.
     * @return string[] Names from series.
     */
    public function getSeriesNames(): array
    {
        return array_map(function ($model) {
            return $model->name;
        }, $this->series);
    }

    /**
     * Sets series by an array of names.
     * @param string[] $names Names for series.
     */
    public function setSeriesNames(array $names): void
    {
        $this->series = array_map(function ($name) {
            return Serie::constructFromArray(['name' => $name]);
        }, $names);
    }

    /**
     * Adds a new Serie to series by name.
     * @param string $name Name for the Serie to add.
     */
    public function addSeriesName(string $name): void
    {
        $this->series[] = Serie::constructFromArray(['name' => $name]);
    }
}
