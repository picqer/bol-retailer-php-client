{
    "openapi": "3.0.1",
    "info": {
        "title": "v10 - Retailer API",
        "description": "The bol.com API for retailers.\n\n# Authentication\nOur API requires authentication via OAuth2. The detailed steps to authenticate are explained [here](https://api.bol.com/retailer/public/Retailer-API/authentication.html) \n\n# Demo scenarios\nOur API specification includes examples of the responses you can expect. For more information as well as more examples, we refer you to the following resources:  \n- [Demo environment](https://api.bol.com/retailer/public/Retailer-API/demo/demo.html)\n- [Demo scenarios](https://api.bol.com/retailer/public/Retailer-API/demo/v10-index.html)\n",
        "termsOfService": "https://api.bol.com/retailer/public/Retailer-API/legal/terms-of-service.html",
        "contact": {
            "name": "developers.bol.com",
            "url": "https://developers.bol.com"
        },
        "version": "10.x",
        "x-logo": {
            "url": "https://api.bol.com/retailer/public/Retailer-API/_images/bolcom_logo.png",
            "altText": "bol.com logo"
        }
    },
    "security": [
        {
            "OAuth2": []
        }
    ],
    "tags": [
        {
            "name": "Commissions",
            "description": "Commissions resource"
        },
        {
            "name": "Insights",
            "description": "Insights resource"
        },
        {
            "name": "Inventory",
            "description": "Inventory resource"
        },
        {
            "name": "Invoices",
            "description": "Invoice resource"
        },
        {
            "name": "Offers",
            "description": "Offer resource"
        },
        {
            "name": "Orders",
            "description": "Order resource"
        },
        {
            "name": "Product Content",
            "description": "Product content resource"
        },
        {
            "name": "Products",
            "description": "Products resource"
        },
        {
            "name": "Promotions",
            "description": "Promotions resource"
        },
        {
            "name": "Replenishments",
            "description": "Replenishments resource"
        },
        {
            "name": "Retailers",
            "description": "Retailers resource"
        },
        {
            "name": "Returns",
            "description": "Return resource"
        },
        {
            "name": "Shipments",
            "description": "Shipment resource"
        },
        {
            "name": "Shipping Labels",
            "description": "Shipping labels resource"
        },
        {
            "name": "Subscriptions",
            "description": "Push notification subscriptions resource"
        },
        {
            "name": "Transports",
            "description": "Transport resource"
        }
    ],
    "paths": {
        "/retailer/commission": {
            "post": {
                "tags": [
                    "Commissions"
                ],
                "summary": "Get all commissions and reductions by EAN in bulk",
                "description": "Gets all commissions and possible reductions by EAN, price, and optionally condition.",
                "operationId": "get-commissions",
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkCommissionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulkCommissionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/commission/{ean}": {
            "get": {
                "tags": [
                    "Commissions"
                ],
                "summary": "Get all commissions and reductions by EAN per single EAN",
                "description": "Commissions can be filtered by condition, which defaults to NEW. We will calculate the commission amount from the EAN and price.",
                "operationId": "get-commission",
                "parameters": [
                    {
                        "name": "ean",
                        "in": "path",
                        "description": "The EAN number associated with this product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "0000007740404"
                    },
                    {
                        "name": "condition",
                        "in": "query",
                        "description": "The condition of the offer.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "NEW",
                                "AS_NEW",
                                "GOOD",
                                "REASONABLE",
                                "MODERATE"
                            ]
                        }
                    },
                    {
                        "name": "unit-price",
                        "in": "query",
                        "description": "The price of the product with a period as a decimal separator. The price should always have two decimals precision.",
                        "required": true,
                        "schema": {
                            "maximum": 9999,
                            "minimum": 0,
                            "type": "number"
                        },
                        "example": 59
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Commission"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/commissions": {
            "post": {
                "tags": [
                    "Commissions"
                ],
                "summary": "Get a list of commissions by EAN (BETA)",
                "description": "Gets a list of all commissions using EAN.",
                "operationId": "get-commission-rates",
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommissionProducts"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "207": {
                        "description": "Multi-status: Retrieved successful and unsuccessful results.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulkCommissionRatesMultiStatusResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/content/catalog-products/{ean}": {
            "get": {
                "tags": [
                    "Product Content"
                ],
                "summary": "Get catalog product details by EAN",
                "description": "Gets the details of a catalog product by means of its EAN.",
                "operationId": "get-catalog-product",
                "parameters": [
                    {
                        "name": "ean",
                        "in": "path",
                        "description": "The EAN number associated with this product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "0000007740404"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "The language in which the catalog product details will be retrieved.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "nl",
                                "nl-BE",
                                "fr",
                                "fr-BE"
                            ]
                        },
                        "example": "nl"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CatalogProduct"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Not acceptable: The sent request header does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/content/chunk-recommendations": {
            "post": {
                "tags": [
                    "Product Content"
                ],
                "summary": "Get chunk recommendations",
                "description": "Gets a selected number of recommendations for a product.",
                "operationId": "get-chunk-recommendations",
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChunkRecommendationsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChunkRecommendationsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/content/products": {
            "post": {
                "tags": [
                    "Product Content"
                ],
                "summary": "Create content for a product",
                "description": "Create content for an existing product.",
                "operationId": "post-product-content",
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateProductContentSingleRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/content/upload-report/{upload-id}": {
            "get": {
                "tags": [
                    "Product Content"
                ],
                "summary": "Get an upload report by upload id",
                "description": "Gets the upload report of the product content submitted by upload id.",
                "operationId": "get-upload-report",
                "parameters": [
                    {
                        "name": "upload-id",
                        "in": "path",
                        "description": "The identifier of the upload report.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadReportResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/insights/offer": {
            "get": {
                "tags": [
                    "Insights"
                ],
                "summary": "Get offer insights",
                "description": "Get the product visits and the buy box percentage for an offer during a given period.",
                "operationId": "get-offer-insights",
                "parameters": [
                    {
                        "name": "offer-id",
                        "in": "query",
                        "description": "Unique identifier for an offer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "The time unit in which the offer insights are grouped.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DAY",
                                "WEEK",
                                "MONTH"
                            ]
                        }
                    },
                    {
                        "name": "number-of-periods",
                        "in": "query",
                        "description": "The number of periods for which the offer insights are requested back in time. The maximum available periods are 24 for MONTH, 104 for WEEK, and 730 for DAY.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the requested offer insight.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "PRODUCT_VISITS",
                                "BUY_BOX_PERCENTAGE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OfferInsights"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/insights/performance/indicator": {
            "get": {
                "tags": [
                    "Insights"
                ],
                "summary": "Get performance indicators",
                "description": "Gets the measurements for your performance indicators per week.",
                "operationId": "get-performance-indicators",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The type of the performance indicator",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CANCELLATIONS",
                                "FULFILMENT",
                                "PHONE_AVAILABILITY",
                                "RESPONSE_TIME",
                                "CASE_ITEM_RATIO",
                                "TRACK_AND_TRACE",
                                "RETURNS",
                                "REVIEWS"
                            ]
                        }
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Year number in the ISO-8601 standard.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "week",
                        "in": "query",
                        "description": "Week number in the ISO-8601 standard. If you would like to get the relative scores from the current week, please provide the current week number here. Be advised that measurements can change heavily over the course of the week.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PerformanceIndicators"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/insights/product-ranks": {
            "get": {
                "tags": [
                    "Insights"
                ],
                "summary": "Get product ranks",
                "description": "Gets a list of product ranks.",
                "operationId": "get-product-ranks",
                "parameters": [
                    {
                        "name": "ean",
                        "in": "query",
                        "description": "The EAN number associated with this product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Filters search results to a specific date. The date must be in the past, no more than three months back, and up to yesterday.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Determines the search type, either 'SEARCH' for specific queries or 'BROWSE' for broader category searches. In order to retrieve all results, it can be sent as \"null\".",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SEARCH",
                                "BROWSE"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The requested page number with a page size of 50 items.",
                        "required": false,
                        "schema": {
                            "maximum": 200,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "The language to search for.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "nl-NL",
                                "nl",
                                "nl-BE",
                                "fr",
                                "fr-BE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductRanks"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Not acceptable: The sent request header does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/insights/sales-forecast": {
            "get": {
                "tags": [
                    "Insights"
                ],
                "summary": "Get sales forecast",
                "description": "Get sales forecast to estimate the sales expectations on the total bol.com platform for the requested number of weeks ahead.",
                "operationId": "get-sales-forecast",
                "parameters": [
                    {
                        "name": "offer-id",
                        "in": "query",
                        "description": "Unique identifier for an offer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "weeks-ahead",
                        "in": "query",
                        "description": "The number of weeks into the future, starting from today.",
                        "required": true,
                        "schema": {
                            "maximum": 12,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SalesForecastResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/insights/search-terms": {
            "get": {
                "tags": [
                    "Insights"
                ],
                "summary": "Get search terms",
                "description": "Retrieves the search volume for a specified search term and period. The search volume allows you to see what bol.com customers are searching for. Based on the search volume per search term you can optimize your product content, or spot opportunities to extend your assortment, or analyzing trends for inventory management.",
                "operationId": "get-search-terms",
                "parameters": [
                    {
                        "name": "search-term",
                        "in": "query",
                        "description": "The search term for which you want to request the search volume.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "The time unit in which the offer insights are grouped.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DAY",
                                "WEEK",
                                "MONTH"
                            ]
                        }
                    },
                    {
                        "name": "number-of-periods",
                        "in": "query",
                        "description": "The number of periods for which the offer insights are requested back in time.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "related-search-terms",
                        "in": "query",
                        "description": "Indicates whether or not you want to retrieve the related search terms.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchTerms"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/inventory": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Get LVB/FBB inventory",
                "description": "The inventory endpoint is a specific LVB/FBB endpoint. It provides a paginated list containing your fulfilment by bol.com inventory. This endpoint does not provide information about your own stock.",
                "operationId": "get-inventory",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The requested page number with a page size of 50 items.",
                        "required": false,
                        "schema": {
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "description": "Filter inventory by providing a range of quantity (min-range)-(max-range). Note that if no state query is submitted in the same request, then the quantity will be filtered on regularStock by default.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "example": "0-10,20-30"
                    },
                    {
                        "name": "stock",
                        "in": "query",
                        "description": "Filter inventory by stock level.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SUFFICIENT",
                                "INSUFFICIENT"
                            ]
                        },
                        "example": "SUFFICIENT"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Filter inventory by stock type.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "REGULAR",
                                "GRADED"
                            ]
                        },
                        "example": "REGULAR"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Filter inventory by EAN or product title.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "0000007740404"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InventoryResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/invoices": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Get all invoices",
                "description": "Gets a list of invoices, by default from the past 4 weeks. The optional period-start-date and period-end-date-date parameters can be used together to retrieve invoices from a specific date range in the past, the period can be no longer than 31 days. Invoices and their specifications can be downloaded separately in different media formats with the ‘GET an invoice by id’ and the ‘GET an invoice specification by id’ calls. The available media types differ per invoice and are listed per invoice within the response. Note: the media types listed in the response must be given in our standard API format.",
                "operationId": "get-invoices",
                "parameters": [
                    {
                        "name": "period-start-date",
                        "in": "query",
                        "description": "Period start date in ISO 8601 standard.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2019-03-01"
                    },
                    {
                        "name": "period-end-date",
                        "in": "query",
                        "description": "Period end date in ISO 8601 standard.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2019-03-31"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/invoices/{invoice-id}": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Get an invoice by invoice id",
                "description": "Gets an invoice by invoice id. The available media types differ per invoice and are listed within the response from the ‘GET all invoices’ call. Note: the media types listed in the response must be given in our standard API format.",
                "operationId": "get-invoice",
                "parameters": [
                    {
                        "name": "invoice-id",
                        "in": "path",
                        "description": "The id of the invoice",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            },
                            "application/vnd.retailer.v10+pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            },
                            "application/vnd.retailer.v10+pdf": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/invoices/{invoice-id}/specification": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Get an invoice specification by invoice id",
                "description": "Gets an invoice specification for an invoice with a paginated list of its transactions. The available media types differ per invoice specification and are listed within the response from the ‘GET all invoices’ call. Note, the media types listed in the response must be given in our standard API format.",
                "operationId": "get-invoice-specification",
                "parameters": [
                    {
                        "name": "invoice-id",
                        "in": "path",
                        "description": "The identifier of the invoice.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The requested page number with a maximum of 25,000 lines.",
                        "required": false,
                        "schema": {
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            },
                            "application/vnd.retailer.v10+openxmlformats-officedocument.spreadsheetml.sheet": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            },
                            "application/vnd.retailer.v10+openxmlformats-officedocument.spreadsheetml.sheet": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            },
                            "application/vnd.retailer.v10+openxmlformats-officedocument.spreadsheetml.sheet": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/offers": {
            "post": {
                "tags": [
                    "Offers"
                ],
                "summary": "Create a new offer",
                "description": "Creates a new offer, and adds it to the catalog. After creation, status information can be retrieved to review if the offer is valid and published to the shop.",
                "operationId": "post-offer",
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOfferRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/offers/export": {
            "post": {
                "tags": [
                    "Offers"
                ],
                "summary": "Request an offer export file",
                "description": "Request an offer export file containing all offers.",
                "operationId": "post-offer-export",
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOfferExportRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/offers/export/{report-id}": {
            "get": {
                "tags": [
                    "Offers"
                ],
                "summary": "Retrieve an offer export file by report id",
                "description": "Retrieve an offer export file containing all offers.",
                "operationId": "get-offer-export",
                "parameters": [
                    {
                        "name": "report-id",
                        "in": "path",
                        "description": "Unique identifier for an offer export file.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request."
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+csv": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+csv": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/offers/unpublished": {
            "post": {
                "tags": [
                    "Offers"
                ],
                "summary": "Request an unpublished offer report",
                "description": "Request an unpublished offer report containing all unpublished offers and reasons.",
                "operationId": "post-unpublished-offer-report",
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUnpublishedOfferReportRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/offers/unpublished/{report-id}": {
            "get": {
                "tags": [
                    "Offers"
                ],
                "summary": "Retrieve an unpublished offer report by report id",
                "description": "Retrieve an unpublished offer report containing all unpublished offers and reasons.",
                "operationId": "get-unpublished-offer-report",
                "parameters": [
                    {
                        "name": "report-id",
                        "in": "path",
                        "description": "Unique identifier for unpublished offer report.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request."
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+csv": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+csv": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/offers/{offer-id}": {
            "get": {
                "tags": [
                    "Offers"
                ],
                "summary": "Retrieve an offer by its offer id",
                "description": "Retrieve an offer by using the offer id provided to you when creating or listing your offers.",
                "operationId": "get-offer",
                "parameters": [
                    {
                        "name": "offer-id",
                        "in": "path",
                        "description": "Unique identifier for an offer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RetailerOffer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Offers"
                ],
                "summary": "Update an offer",
                "description": "Use this endpoint to send an offer update. This endpoint returns a process status.",
                "operationId": "put-offer",
                "parameters": [
                    {
                        "name": "offer-id",
                        "in": "path",
                        "description": "Unique identifier for an offer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOfferRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Offers"
                ],
                "summary": "Delete offer by id",
                "description": "Delete an offer by id.",
                "operationId": "delete-offer",
                "parameters": [
                    {
                        "name": "offer-id",
                        "in": "path",
                        "description": "Unique identifier for an offer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/offers/{offer-id}/price": {
            "put": {
                "tags": [
                    "Offers"
                ],
                "summary": "Update price(s) for offer by id",
                "description": "Update price(s) for offer by id.",
                "operationId": "update-offer-price",
                "parameters": [
                    {
                        "name": "offer-id",
                        "in": "path",
                        "description": "Unique identifier for an offer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOfferPriceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/offers/{offer-id}/stock": {
            "put": {
                "tags": [
                    "Offers"
                ],
                "summary": "Update stock for offer by id",
                "description": "Update stock for offer by id.",
                "operationId": "update-offer-stock",
                "parameters": [
                    {
                        "name": "offer-id",
                        "in": "path",
                        "description": "Unique identifier for an offer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOfferStockRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get a list of orders",
                "description": "Gets a paginated list of all orders for a retailer.",
                "operationId": "get-orders",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The requested page number with a page size of 50 items.",
                        "required": false,
                        "schema": {
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "fulfilment-method",
                        "in": "query",
                        "description": "Fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB). In order to retrieve both FBR and FBB orders, ALL can be used as a parameter.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FBR",
                                "FBB",
                                "ALL"
                            ]
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "You can filter orders based on their status with the following options: all orders, which include every order regardless of its current status; open orders, which show only the active orders excluding those that have been shipped or cancelled; and shipped orders, which display only the orders that have been shipped.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "OPEN",
                                "SHIPPED",
                                "ALL"
                            ]
                        }
                    },
                    {
                        "name": "change-interval-minute",
                        "in": "query",
                        "description": "Indicate the period in minutes, to filter order items based on their most recent change. If this parameter value is included when polling the API, ensure your polling frequency is at least one minute shorter than the specified interval.For example, if change-interval-minute is set to 2 minutes, poll the API every 1 minute or less.",
                        "required": false,
                        "schema": {
                            "maximum": 60,
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "latest-change-date",
                        "in": "query",
                        "description": "To filter on the date on which the latest change was performed on an order item. Up to 3 months of history is supported.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vvb-only",
                        "in": "query",
                        "description": "Filters results to include only orders fulfilled through VVB. If set to true, the API will return only VVB orders.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReducedOrders"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/orders/cancellation": {
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Cancel an order item by an order item id",
                "description": "This endpoint can be used to either confirm a cancellation request by the customer or to cancel an order item you yourself are unable to fulfil.",
                "operationId": "cancel-order-item",
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CancellationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/orders/{order-id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get an order by order id",
                "description": "Gets an order by order id. The order can be partially shipped or cancelled, and the message contains the quantity shipped or cancelled items.",
                "operationId": "get-order",
                "parameters": [
                    {
                        "name": "order-id",
                        "in": "path",
                        "description": "The id of the order to get.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/products/categories": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product categories",
                "description": "Get a list of available categories and its subcategories.",
                "operationId": "get-product-categories",
                "parameters": [
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "The language in which the product categories will be retrieved.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "nl",
                                "nl-BE",
                                "nl-NL",
                                "fr-BE"
                            ]
                        },
                        "example": "nl"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCategoriesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Not acceptable: The sent request header does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/products/list": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product list",
                "description": "Gets the list of products based on category, search term or filters.",
                "operationId": "get-product-list",
                "parameters": [
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "The language in which the product list will be retrieved.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "nl",
                                "nl-BE",
                                "nl-NL",
                                "fr-BE"
                            ]
                        },
                        "example": "nl"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductListRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Not acceptable: The sent request header does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/products/list-filters": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product list filters",
                "description": "Gets the list of possible filters for products based on category or search term.",
                "operationId": "get-product-list-filters",
                "parameters": [
                    {
                        "name": "country-code",
                        "in": "query",
                        "description": "The country for which the filters will be retrieved.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "NL",
                                "BE"
                            ]
                        },
                        "example": "NL"
                    },
                    {
                        "name": "search-term",
                        "in": "query",
                        "description": "The search-term to get the associated categories and filters for.",
                        "required": false,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                        },
                        "example": "pen"
                    },
                    {
                        "name": "category-id",
                        "in": "query",
                        "description": "The category to get the associated filters for.",
                        "required": false,
                        "schema": {
                            "maxLength": 11,
                            "minLength": 0,
                            "type": "string"
                        },
                        "example": 10505
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "The language in which the product list filters will be retrieved.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "nl",
                                "nl-BE",
                                "nl-NL",
                                "fr-BE"
                            ]
                        },
                        "example": "nl"
                    },
                    {
                        "name": "productListFiltersRequest",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/ProductListFiltersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductListFiltersResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Not acceptable: The sent request header does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/products/{ean}/assets": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product assets",
                "description": "Gets the list of asset available for the product by EAN.",
                "operationId": "get-product-assets",
                "parameters": [
                    {
                        "name": "ean",
                        "in": "path",
                        "description": "The EAN number associated with this product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "0000007740404"
                    },
                    {
                        "name": "usage",
                        "in": "query",
                        "description": "Type of the asset being used for.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "PRIMARY",
                                "ADDITIONAL",
                                "IMAGE"
                            ]
                        },
                        "example": "ADDITIONAL"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductAssetsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/products/{ean}/offers": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get a list of competing offers by EAN",
                "description": "Use this endpoint to get a list of offers available in the webshop. The list includes offers for all retailers.",
                "operationId": "get-competing-offers",
                "parameters": [
                    {
                        "name": "ean",
                        "in": "path",
                        "description": "The EAN number associated with this product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "0000007740404"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The requested page number with a page size of 50 items.",
                        "required": false,
                        "schema": {
                            "maximum": 200,
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "country-code",
                        "in": "query",
                        "description": "Countries in which this offer is currently on sale in the webshop, in ISO-3166-1 format.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "NL",
                                "BE"
                            ]
                        },
                        "example": "NL"
                    },
                    {
                        "name": "best-offer-only",
                        "in": "query",
                        "description": "Indicator to request the best offer within the country for the requested EAN.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "example": true
                    },
                    {
                        "name": "condition",
                        "in": "query",
                        "description": "The condition of the offered product.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ALL",
                                "BAD",
                                "MODERATE",
                                "REASONABLE",
                                "GOOD",
                                "AS_NEW",
                                "NEW"
                            ]
                        },
                        "example": "NEW"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompetingOffersResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/products/{ean}/placement": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product placement",
                "description": "Gets the list of categories and the URL where the product is placed in the webshop.",
                "operationId": "get-product-placement",
                "parameters": [
                    {
                        "name": "ean",
                        "in": "path",
                        "description": "The EAN number associated with this product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "0000007740404"
                    },
                    {
                        "name": "country-code",
                        "in": "query",
                        "description": "The country of the product placed on the webshop.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "NL",
                                "BE"
                            ]
                        },
                        "example": "NL"
                    },
                    {
                        "name": "Accept-Language",
                        "in": "header",
                        "description": "The language in which the product categories and URL will be retrieved.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "nl",
                                "nl-BE",
                                "fr-BE"
                            ]
                        },
                        "example": "nl"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductPlacementResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Not acceptable: The sent request header does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/products/{ean}/price-star-boundaries": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get price star boundaries by EAN",
                "description": "Gets a list of all price star boundaries for a specific EAN.",
                "operationId": "get-price-star-boundaries",
                "parameters": [
                    {
                        "name": "ean",
                        "in": "path",
                        "description": "The EAN number associated with this product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "0000007740404"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PriceStarBoundaries"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/products/{ean}/product-ids": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product ids by EAN",
                "description": "Get the bol.com specific product identifier and the related EANs.",
                "operationId": "get-product-ids",
                "parameters": [
                    {
                        "name": "ean",
                        "in": "path",
                        "description": "The EAN number associated with this product.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "0000007740404"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductIdsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/products/{ean}/ratings": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product ratings",
                "description": "Gets a list of ratings for the products associated with the provided EAN.",
                "operationId": "get-product-ratings",
                "parameters": [
                    {
                        "name": "ean",
                        "in": "path",
                        "description": "The EAN number associated with this rating.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "0000007740404"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductRatingsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/promotions": {
            "get": {
                "tags": [
                    "Promotions"
                ],
                "summary": "Get a list of promotions",
                "description": "Gets a paginated list of all promotions for a retailer.",
                "operationId": "get-promotions",
                "parameters": [
                    {
                        "name": "promotion-type",
                        "in": "query",
                        "description": "The type(s) of promotion to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AWARENESS",
                                "PRICE_OFF"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The requested page number with a page size of 50 items.",
                        "required": false,
                        "schema": {
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Promotions"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/promotions/{promotion-id}": {
            "get": {
                "tags": [
                    "Promotions"
                ],
                "summary": "Get a promotion by promotion id",
                "description": "Gets the details of a promotion.",
                "operationId": "get-promotion",
                "parameters": [
                    {
                        "name": "promotion-id",
                        "in": "path",
                        "description": "The identifier of the promotion.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Promotion"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/promotions/{promotion-id}/products": {
            "get": {
                "tags": [
                    "Promotions"
                ],
                "summary": "Get a list of products",
                "description": "Gets a paginated list of all products that are present within a promotion.",
                "operationId": "get-products",
                "parameters": [
                    {
                        "name": "promotion-id",
                        "in": "path",
                        "description": "The identifier of the promotion.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The requested page number with a page size of 50 items.",
                        "required": false,
                        "schema": {
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/replenishments": {
            "get": {
                "tags": [
                    "Replenishments"
                ],
                "summary": "Get replenishments",
                "description": "Gets a list of replenishments.",
                "operationId": "get-replenishments",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "query",
                        "description": "Custom user defined reference to identify the replenishment.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "REFERENCE1"
                    },
                    {
                        "name": "ean",
                        "in": "query",
                        "description": "The EAN number associated with this product.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "0000007740404"
                    },
                    {
                        "name": "start-date",
                        "in": "query",
                        "description": "The creation start date to find the replenishment. In ISO 8601 format.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2021-01-01"
                    },
                    {
                        "name": "end-date",
                        "in": "query",
                        "description": "The end date of the range to find the replenishment. In ISO 8601 format.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2021-01-02"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "The current state(s) of the replenishment.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "example": "ANNOUNCED"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The requested page number with a page size of 50 items.",
                        "required": false,
                        "schema": {
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReplenishmentsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Replenishments"
                ],
                "summary": "Create a replenishment",
                "description": "Creates a replenishment.",
                "operationId": "post-replenishment",
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateReplenishmentRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/replenishments/delivery-dates": {
            "get": {
                "tags": [
                    "Replenishments"
                ],
                "summary": "Get delivery dates",
                "description": "Retrieve a list of available delivery dates for a replenishment.",
                "operationId": "get-delivery-dates",
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliveryDatesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/replenishments/pickup-time-slots": {
            "post": {
                "tags": [
                    "Replenishments"
                ],
                "summary": "Post pickup time slots",
                "description": "Retrieve pickup time slots.",
                "operationId": "post-pickup-time-slots",
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PickupTimeSlotsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PickupTimeSlotsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/replenishments/product-destinations": {
            "post": {
                "tags": [
                    "Replenishments"
                ],
                "summary": "Request product destinations",
                "description": "Requests a list of product destinations by EANs.",
                "operationId": "post-request-product-destinations",
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestProductDestinationsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/replenishments/product-destinations/{product-destinations-id}": {
            "get": {
                "tags": [
                    "Replenishments"
                ],
                "summary": "Get product destinations by product destinations id",
                "description": "Gets the product destinations for one or more products by product destinations id.",
                "operationId": "get-product-destinations",
                "parameters": [
                    {
                        "name": "product-destinations-id",
                        "in": "path",
                        "description": "The identifier of the product destinations requested.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "9483fc7e-faf3-4814-864e-dee412044c27"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductDestinationsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/replenishments/product-labels": {
            "post": {
                "tags": [
                    "Replenishments"
                ],
                "summary": "Post product labels",
                "description": "Retrieve product labels.",
                "operationId": "post-product-labels",
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductLabelsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+pdf": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+pdf": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/replenishments/{replenishment-id}": {
            "get": {
                "tags": [
                    "Replenishments"
                ],
                "summary": "Get a replenishment by replenishment id",
                "description": "Gets a replenishment by replenishment id.",
                "operationId": "get-replenishment",
                "parameters": [
                    {
                        "name": "replenishment-id",
                        "in": "path",
                        "description": "The unique identifier of the replenishment.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 2312078154
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReplenishmentResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Replenishments"
                ],
                "summary": "Update a replenishment by replenishment id",
                "description": "Updates a replenishment.",
                "operationId": "put-replenishment",
                "parameters": [
                    {
                        "name": "replenishment-id",
                        "in": "path",
                        "description": "The unique identifier of the replenishment.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 2312078154
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateReplenishmentRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/replenishments/{replenishment-id}/load-carrier-labels": {
            "get": {
                "tags": [
                    "Replenishments"
                ],
                "summary": "Get load carrier labels",
                "description": "Retrieve the load carrier labels.",
                "operationId": "get-load-carrier-labels",
                "parameters": [
                    {
                        "name": "replenishment-id",
                        "in": "path",
                        "description": "The unique identifier of the replenishment.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 2312078154
                    },
                    {
                        "name": "label-type",
                        "in": "query",
                        "description": "The type of label which you want to print.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "WAREHOUSE",
                                "TRANSPORT"
                            ]
                        },
                        "example": "WAREHOUSE"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+pdf": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+pdf": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/replenishments/{replenishment-id}/pick-list": {
            "get": {
                "tags": [
                    "Replenishments"
                ],
                "summary": "Get pick list",
                "description": "Retrieve the pick list.",
                "operationId": "get-pick-list",
                "parameters": [
                    {
                        "name": "replenishment-id",
                        "in": "path",
                        "description": "The unique identifier of the replenishment.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 2312078154
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+pdf": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+pdf": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/retailers/{retailer-id}": {
            "get": {
                "tags": [
                    "Retailers"
                ],
                "summary": "Get retailer information by retailer id",
                "description": "Gets retailer information of a single retailer.",
                "operationId": "get-retailer-information",
                "parameters": [
                    {
                        "name": "retailer-id",
                        "in": "path",
                        "description": "The Id of the retailer which information belongs to. Use 'current' to retrieve information about your own retailer account.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 1055479
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RetailerInformationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/returns": {
            "get": {
                "tags": [
                    "Returns"
                ],
                "summary": "Get returns",
                "description": "Get a paginated list of multi-item returns. Handled returns are sorted by date in descending order, while unhandled returns are sorted by date in ascending order.",
                "operationId": "get-returns",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page to get with a page size of 50.",
                        "required": false,
                        "schema": {
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "handled",
                        "in": "query",
                        "description": "The status of the returns you wish to see, shows either handled or unhandled returns.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "fulfilment-method",
                        "in": "query",
                        "description": "The fulfilment method. Fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FBR",
                                "FBB"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReturnsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Returns"
                ],
                "summary": "Create a return",
                "description": "Create a return, and automatically handle it with the provided handling result. When successfully created, the resulting return id is provided in the process status.",
                "operationId": "create-return",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateReturnRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/returns/{return-id}": {
            "get": {
                "tags": [
                    "Returns"
                ],
                "summary": "Get a return by return id",
                "description": "Retrieve a return based on the return id.",
                "operationId": "get-return",
                "parameters": [
                    {
                        "name": "return-id",
                        "in": "path",
                        "description": "Unique identifier for a return.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Return"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/returns/{rma-id}": {
            "put": {
                "tags": [
                    "Returns"
                ],
                "summary": "Handle a return by rma id",
                "description": "Allows the user to handle a return. This can be to either handle an open return, or change the handlingResult of an already handled return. Please refer to the Returns documentation for further details.",
                "operationId": "handle-return",
                "parameters": [
                    {
                        "name": "rma-id",
                        "in": "path",
                        "description": "The RMA (Return Merchandise Authorization) identifier of the return.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReturnRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/shipments": {
            "get": {
                "tags": [
                    "Shipments"
                ],
                "summary": "Get shipment list",
                "description": "A paginated list to retrieve all your shipments up to 3 months old. The shipments will be sorted by date in descending order.",
                "operationId": "get-shipments",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page to get with a page size of 50.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "fulfilment-method",
                        "in": "query",
                        "description": "The fulfilment method. Fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FBR",
                                "FBB"
                            ]
                        }
                    },
                    {
                        "name": "order-id",
                        "in": "query",
                        "description": "The id of the order. Only valid without fulfilment-method. The default fulfilment-method is ignored.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipmentsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Shipments"
                ],
                "summary": "Create a shipment",
                "description": "Ship multiple single order items within a customer order by providing shipping information. If you purchased a shipping label you should add the shippingLabelId to this message and leave the transport element empty. If you will ship the item using your own transporter method you must omit the shippingLabelId entirely and fill in the transport element with the fields from GET shipping labels.",
                "operationId": "create-shipment",
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipmentRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/shipments/invoices/requests": {
            "get": {
                "tags": [
                    "Shipments"
                ],
                "summary": "Get a list of invoice requests",
                "description": "Gets a list of paginated invoice requests initiated by customers.",
                "operationId": "get-invoice-requests",
                "parameters": [
                    {
                        "name": "shipment-id",
                        "in": "query",
                        "description": "The id of the shipment.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": 541757635
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The requested page number with a page size of 50 items.",
                        "required": false,
                        "schema": {
                            "minimum": 1,
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        },
                        "example": 1
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "To filter on invoice request state. You can filter on all invoice requests regardless their statuses, open invoice requests requiring your action and invoice requests uploaded with possible errors.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "OPEN",
                                "UPLOAD_ERROR",
                                "ALL"
                            ]
                        },
                        "example": "OPEN"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvoiceRequestsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/shipments/invoices/{shipment-id}": {
            "post": {
                "tags": [
                    "Shipments"
                ],
                "summary": "Upload an invoice for shipment id",
                "description": "Uploads an invoice associated with shipment id.",
                "operationId": "upload-invoice",
                "parameters": [
                    {
                        "name": "shipment-id",
                        "in": "path",
                        "description": "The id of the shipment associated with the invoice.",
                        "required": true,
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        },
                        "example": 541757635
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "invoice"
                                ],
                                "type": "object",
                                "properties": {
                                    "invoice": {
                                        "type": "string",
                                        "description": "The invoice file.",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type: Content-Type header contains invalid value, allowed value is multipart/form-data.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/shipments/{shipment-id}": {
            "get": {
                "tags": [
                    "Shipments"
                ],
                "summary": "Get a shipment by shipment id",
                "description": "Retrieve a single shipment by its corresponding id.",
                "operationId": "get-shipment",
                "parameters": [
                    {
                        "name": "shipment-id",
                        "in": "path",
                        "description": "The id of the shipment.",
                        "required": true,
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Shipment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/shipping-labels": {
            "post": {
                "tags": [
                    "Shipping Labels"
                ],
                "summary": "Create a shipping label",
                "description": "Create a shipping label with a shipping label offer id retrieved from get delivery options.",
                "operationId": "post-shipping-label",
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShippingLabelRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/shipping-labels/delivery-options": {
            "post": {
                "tags": [
                    "Shipping Labels"
                ],
                "summary": "Get delivery options",
                "description": "Retrieves all available delivery options based on the supplied configuration of order items that has to be shipped.",
                "operationId": "get-delivery-options",
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeliveryOptionsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeliveryOptionsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/shipping-labels/{shipping-label-id}": {
            "get": {
                "tags": [
                    "Shipping Labels"
                ],
                "summary": "Get a shipping label",
                "description": "Retrieves a shipping label by shipping label id. Metadata for the shipping label is added as headers in the response. If you are only interested in the metadata, you can do a HEAD request to retrieve only the headers without the label data.",
                "operationId": "get-shipping-label",
                "parameters": [
                    {
                        "name": "shipping-label-id",
                        "in": "path",
                        "description": "The shipping label id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "6ff736b5-cdd0-4150-8c67-78269ee986f5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "headers": {
                            "X-Track-And-Trace-Code": {
                                "description": "Track and trace code for the retrieved label.",
                                "style": "simple",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "X-Transporter-Code": {
                                "description": "Transporter code for the retrieved label.",
                                "style": "simple",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/vnd.retailer.v10+pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+pdf": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+pdf": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/subscriptions": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Retrieve Event Notification Subscriptions",
                "description": "Retrieves all event notification subscriptions for a given retailer. Each subscription may have different types of events and a destination, which could either be a URL (for WEBHOOK) or a topic name (for GCP_PUBSUB).",
                "operationId": "get-push-notification-subscriptions",
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Create Event Notification Subscription",
                "description": "Creates a new event notification subscription for a retailer. The subscription can be set up for one or more types of events and the destination can either be a URL (for WEBHOOK) or a topic name (for GCP_PUBSUB).",
                "operationId": "post-push-notification-subscription",
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/subscriptions/signature-keys": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Retrieve public keys for push notification signature validation.",
                "description": "Retrieve a list of public keys that should be used to validate the signature header for push notifications received from bol.com.",
                "operationId": "get-subscription-keys",
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KeySetResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/subscriptions/test/{subscription-id}": {
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Send test push notification for subscriptions",
                "description": "Send a test push notification to all subscriptions for the provided event.",
                "operationId": "post-test-push-notification",
                "parameters": [
                    {
                        "name": "subscription-id",
                        "in": "path",
                        "description": "The unique identifier assigned to each event notification subscription. This ID is used for tracking and managing each subscription.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 1234
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/subscriptions/{subscription-id}": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Retrieve Specific Event Notification Subscription",
                "description": "Fetches the details of a specific event notification subscription for a retailer. The details include the types of events and the destination, which can either be a URL (for WEBHOOK) or a topic name (for GCP_PUBSUB).",
                "operationId": "get-push-notification-subscription",
                "parameters": [
                    {
                        "name": "subscription-id",
                        "in": "path",
                        "description": "The unique identifier assigned to each event notification subscription. This ID is used for tracking and managing each subscription.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 1234
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok: Successfully processed the request.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found: The requested item could not be found.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Update Event Notification Subscription",
                "description": "Updates the details of a specific event notification subscription for a retailer. The updates can be made to the types of events and/or the destination, which can either be a URL (for WEBHOOK) or a topic name (for GCP_PUBSUB).",
                "operationId": "put-push-notification-subscription",
                "parameters": [
                    {
                        "name": "subscription-id",
                        "in": "path",
                        "description": "The unique identifier assigned to each event notification subscription. This ID is used for tracking and managing each subscription.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 1234
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Remove Event Notification Subscription",
                "description": "Deletes a specific event notification subscription associated with a retailer.",
                "operationId": "delete-push-notification-subscription",
                "parameters": [
                    {
                        "name": "subscription-id",
                        "in": "path",
                        "description": "The unique identifier assigned to each event notification subscription. This ID is used for tracking and managing each subscription.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": 1234
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retailer/transports/{transport-id}": {
            "put": {
                "tags": [
                    "Transports"
                ],
                "summary": "Add transport information by transport id",
                "description": "Add information to an existing transport. The transport id is part of the shipment. You can retrieve the transport id through the GET shipment list request.",
                "operationId": "add-transport-information-by-transport-id",
                "parameters": [
                    {
                        "name": "transport-id",
                        "in": "path",
                        "description": "The transport id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/vnd.retailer.v10+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeTransportRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepted: Successfully scheduled the request for processing.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProcessStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.",
                        "content": {
                            "application/vnd.retailer.v10+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Problem": {
                "required": [
                    "detail",
                    "status",
                    "title",
                    "type",
                    "violations"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type URI for this problem. Fixed value: https://api.bol.com/problems.",
                        "format": "uri",
                        "example": "https://api.bol.com/problems"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title describing the nature of the problem.",
                        "example": "Error validating request. Consult the bol.com API documentation for more information."
                    },
                    "status": {
                        "type": "integer",
                        "description": "HTTP status returned from the endpoint causing the problem.",
                        "format": "int32"
                    },
                    "detail": {
                        "type": "string",
                        "description": "Detailed error message describing in additional detail what caused the service to return this problem.",
                        "example": "Bad request"
                    },
                    "host": {
                        "type": "string",
                        "description": "Host identifier describing the server instance that reported the problem.",
                        "example": "Instance-001"
                    },
                    "instance": {
                        "type": "string",
                        "description": "Full URI path of the resource that reported the problem.",
                        "format": "uri",
                        "example": "https://api.bol.com//retailer/resource"
                    },
                    "violations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Violation"
                        }
                    }
                },
                "description": "Describes a problem that occurred interacting with the API."
            },
            "Violation": {
                "required": [
                    "name",
                    "reason"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Describes the origin of the error, for instance a field or query parameter validation error.",
                        "example": "exampleValue"
                    },
                    "reason": {
                        "type": "string",
                        "description": "Detailed description of the validation error that caused the problem.",
                        "example": "Request contains invalid value(s): 'INVALID', allowed values: ALLOWED_VALUE1, ALLOWED_VALUE2."
                    }
                },
                "description": "Describes a violation that occurred interacting with the API."
            },
            "ChangeTransportRequest": {
                "required": [
                    "trackAndTrace"
                ],
                "type": "object",
                "properties": {
                    "transporterCode": {
                        "type": "string",
                        "description": "Specify the transporter that carries out the shipment.",
                        "example": "TNT"
                    },
                    "trackAndTrace": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The track and trace code that is associated with this transport.",
                        "example": "3SBOL0987654321"
                    }
                },
                "description": "The change transport requested by the user."
            },
            "Link": {
                "type": "object",
                "properties": {
                    "rel": {
                        "type": "string"
                    },
                    "href": {
                        "type": "string"
                    },
                    "hreflang": {
                        "type": "string"
                    },
                    "media": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "deprecation": {
                        "type": "string"
                    },
                    "profile": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "ProcessStatus": {
                "required": [
                    "createTimestamp",
                    "description",
                    "eventType",
                    "links",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "processStatusId": {
                        "type": "string",
                        "description": "The process status id.",
                        "example": "1234567"
                    },
                    "entityId": {
                        "type": "string",
                        "description": "The id of the object being processed. For example, in case of a shipment process id, you will receive the id of the order item being processed.",
                        "example": "987654321"
                    },
                    "eventType": {
                        "type": "string",
                        "description": "Name of the requested action that is being processed.",
                        "example": "CREATE_SHIPMENT"
                    },
                    "description": {
                        "type": "string",
                        "description": "Describes the action that is being processed.",
                        "example": "Example process status description for processing 987654321."
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the action being processed.",
                        "example": "SUCCESS",
                        "enum": [
                            "PENDING",
                            "SUCCESS",
                            "FAILURE",
                            "TIMEOUT"
                        ]
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Shows error message if applicable.",
                        "example": "Example process status error message."
                    },
                    "createTimestamp": {
                        "type": "string",
                        "description": "Time of creation of the response.",
                        "format": "date-time",
                        "example": "2018-11-14T09:34:41+01:00"
                    },
                    "links": {
                        "type": "array",
                        "description": "Lists available actions applicable to this endpoint.",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        }
                    }
                }
            },
            "SubscriptionRequest": {
                "required": [
                    "resources",
                    "subscriptionType",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "resources": {
                        "type": "array",
                        "description": "Array of event types for which the subscription is set. Note that some event types are only available for certain subscription types.",
                        "example": "['PROCESS_STATUS']",
                        "items": {
                            "type": "string",
                            "description": "Array of event types for which the subscription is set. Note that some event types are only available for certain subscription types.",
                            "example": "['PROCESS_STATUS']",
                            "enum": [
                                "PROCESS_STATUS",
                                "SHIPMENT",
                                "PRICE_STAR_BOUNDARY",
                                "COMPETING_OFFER",
                                "OFFER_FOR_SALE",
                                "OFFER_NOT_FOR_SALE"
                            ]
                        }
                    },
                    "url": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The destination for event notifications. For WEBHOOK subscription types, this is the URL where messages are posted to. For GCP_PUBSUB, this is the topic name.",
                        "example": "https://www.bol.com/webhook"
                    },
                    "subscriptionType": {
                        "type": "string",
                        "description": "The type of subscription. It indicates the platform where the events will be subscribed to. Be aware that certain event types are only available for specific types.",
                        "example": "WEBHOOK",
                        "enum": [
                            "WEBHOOK",
                            "GCP_PUBSUB",
                            "AWS_SQS"
                        ]
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the subscription is enabled and will receive notifications or not. Defaults to true.",
                        "example": true
                    },
                    "identity": {
                        "type": "string",
                        "description": "Identity needed for publishing a notification. Must be provided if subscriptionType = AWS_SQS and must be in format of AWS ARN",
                        "example": "arn:aws:iam::<numeric AWS account id>:role/<role name>"
                    }
                }
            },
            "ReturnRequest": {
                "required": [
                    "handlingResult",
                    "quantityReturned"
                ],
                "type": "object",
                "properties": {
                    "handlingResult": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The handling result requested by the retailer.",
                        "example": "RETURN_RECEIVED",
                        "enum": [
                            "RETURN_RECEIVED",
                            "EXCHANGE_PRODUCT",
                            "RETURN_DOES_NOT_MEET_CONDITIONS",
                            "REPAIR_PRODUCT",
                            "CUSTOMER_KEEPS_PRODUCT_PAID",
                            "STILL_APPROVED"
                        ]
                    },
                    "quantityReturned": {
                        "maximum": 9999,
                        "minimum": 1,
                        "type": "integer",
                        "description": "The quantity of items returned.",
                        "format": "int32",
                        "example": 1
                    }
                },
                "description": "The handling result requested by the retailer."
            },
            "UpdateDeliveryInfo": {
                "required": [
                    "expectedDeliveryDate"
                ],
                "type": "object",
                "properties": {
                    "expectedDeliveryDate": {
                        "type": "string",
                        "description": "The expected delivery date of the shipment at the bol.com warehouse. In ISO 8601 format.",
                        "example": "2021-01-01"
                    }
                }
            },
            "UpdateLoadCarrier": {
                "required": [
                    "sscc"
                ],
                "type": "object",
                "properties": {
                    "sscc": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The Serial Shipping Container Code (SSCC) for this load carrier.",
                        "example": "020001200000007000"
                    }
                }
            },
            "UpdateReplenishmentRequest": {
                "type": "object",
                "properties": {
                    "state": {
                        "type": "string",
                        "description": "Update the state of the replenishment to cancel the replenishment.",
                        "example": "CANCELLED",
                        "enum": [
                            "CANCELLED"
                        ]
                    },
                    "deliveryInfo": {
                        "$ref": "#/components/schemas/UpdateDeliveryInfo"
                    },
                    "numberOfLoadCarriers": {
                        "maximum": 66,
                        "minimum": 1,
                        "type": "integer",
                        "description": "The number of parcels in this replenishment. Note: if you are using the bol.com pickup service, the maximum number is 20.",
                        "format": "int32",
                        "example": 10
                    },
                    "loadCarriers": {
                        "maxItems": 66,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UpdateLoadCarrier"
                        }
                    }
                }
            },
            "CancellationRequest": {
                "required": [
                    "orderItems"
                ],
                "type": "object",
                "properties": {
                    "orderItems": {
                        "maxItems": 1,
                        "minItems": 1,
                        "type": "array",
                        "description": "List of order items to cancel. Order item id's must belong to the same order.",
                        "items": {
                            "$ref": "#/components/schemas/OrderItemCancellation"
                        }
                    }
                },
                "description": "Container for the order items that have to be cancelled."
            },
            "OrderItemCancellation": {
                "required": [
                    "orderItemId",
                    "reasonCode"
                ],
                "type": "object",
                "properties": {
                    "orderItemId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The id for the order item. One order can have multiple order items, but the list can only take one item.",
                        "example": "2012345678"
                    },
                    "reasonCode": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The code representing the reason for cancellation of this item.",
                        "example": "BAD_CONDITION",
                        "enum": [
                            "OUT_OF_STOCK",
                            "REQUESTED_BY_CUSTOMER",
                            "BAD_CONDITION",
                            "HIGHER_SHIPCOST",
                            "INCORRECT_PRICE",
                            "NOT_AVAIL_IN_TIME",
                            "NO_BOL_GUARANTEE",
                            "ORDERED_TWICE",
                            "RETAIN_ITEM",
                            "TECH_ISSUE",
                            "UNFINDABLE_ITEM",
                            "OTHER"
                        ]
                    }
                },
                "description": "List of order items to cancel. Order item id's must belong to the same order."
            },
            "Fulfilment": {
                "required": [
                    "method"
                ],
                "type": "object",
                "properties": {
                    "method": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The fulfilment method. Fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).",
                        "example": "FBR",
                        "enum": [
                            "FBR",
                            "FBB"
                        ]
                    },
                    "deliveryCode": {
                        "type": "string",
                        "description": "The delivery promise that applies to this offer. This value will only be used in combination with fulfilmentMethod 'FBR'.",
                        "enum": [
                            "24uurs-23",
                            "24uurs-22",
                            "24uurs-21",
                            "24uurs-20",
                            "24uurs-19",
                            "24uurs-18",
                            "24uurs-17",
                            "24uurs-16",
                            "24uurs-15",
                            "24uurs-14",
                            "24uurs-13",
                            "24uurs-12",
                            "1-2d",
                            "2-3d",
                            "3-5d",
                            "4-8d",
                            "1-8d",
                            "MijnLeverbelofte",
                            "VVB"
                        ]
                    }
                }
            },
            "UpdateOfferRequest": {
                "required": [
                    "fulfilment"
                ],
                "type": "object",
                "properties": {
                    "economicOperatorId": {
                        "type": "string",
                        "description": "An identifier referring to the Economic operator entity (manufacturer, authorized party, importer, distributor or other natural person or legal entity for whom the obligations apply with regards to the manufacturing, or making available on the market of the product in line with the applicable EU laws).",
                        "example": "90bfddc5-a6d0-4986-9253-407b3a6850ca"
                    },
                    "reference": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string",
                        "description": "A user-defined reference that helps you identify this particular offer when receiving data from us. This element can optionally be left empty and has a maximum amount of 100 characters.",
                        "example": "REF12345"
                    },
                    "onHoldByRetailer": {
                        "type": "boolean",
                        "description": "This field specifies whether the retailer has temporarily suspended the listing of this offer on the bol.com website. When set to true, the offer becomes invisible to customers and is not available for purchase. The default setting, false, indicates that the offer is active and visible on the website. This feature is useful for managing inventory or making updates to the offer without permanently removing it from the site.",
                        "example": false,
                        "default": false
                    },
                    "unknownProductTitle": {
                        "maxLength": 500,
                        "minLength": 0,
                        "type": "string",
                        "description": "In case the item is not known to bol.com you can use this field to identify this particular product. Note: in case the product is known to bol.com, the unknown product title will not be stored.",
                        "example": "Unknown Product Title"
                    },
                    "fulfilment": {
                        "$ref": "#/components/schemas/Fulfilment"
                    }
                }
            },
            "UpdateOfferStockRequest": {
                "required": [
                    "amount",
                    "managedByRetailer"
                ],
                "type": "object",
                "properties": {
                    "amount": {
                        "maximum": 999,
                        "minimum": 0,
                        "type": "integer",
                        "description": "The amount of stock available for the specified product present in the retailers warehouse. Note: this should not be the FBB stock! Defaults to 0.",
                        "format": "int32",
                        "example": 6
                    },
                    "managedByRetailer": {
                        "type": "boolean",
                        "description": "Configures whether the retailer manages the stock levels or that bol.com should calculate the corrected stock based on actual open orders. In case the configuration is set to 'false', all open orders are used to calculate the corrected stock. In case the configuration is set to 'true', only orders that are placed after the last offer update are taken into account.",
                        "example": false
                    }
                }
            },
            "BundlePrice": {
                "required": [
                    "quantity",
                    "unitPrice"
                ],
                "type": "object",
                "properties": {
                    "quantity": {
                        "maximum": 24,
                        "minimum": 1,
                        "type": "integer",
                        "description": "The minimum quantity a customer must order in order to receive discount. The element with value 1 must at least be present. In case of using more elements, the respective quantities must be in increasing order.",
                        "format": "int32",
                        "example": 1
                    },
                    "unitPrice": {
                        "maximum": 9999,
                        "minimum": 1,
                        "type": "number",
                        "description": "The price per single unit including VAT in case the customer orders at least the quantity provided. When using more than 1 price, the respective prices must be in decreasing order using 2 decimal precision and dot separated.",
                        "example": 9.99
                    }
                },
                "description": "A set of prices (containing a quantity and selling price) that apply to this offer."
            },
            "Pricing": {
                "required": [
                    "bundlePrices"
                ],
                "type": "object",
                "properties": {
                    "bundlePrices": {
                        "maxItems": 4,
                        "minItems": 1,
                        "type": "array",
                        "description": "A set of prices (containing a quantity and selling price) that apply to this offer.",
                        "items": {
                            "$ref": "#/components/schemas/BundlePrice"
                        }
                    }
                }
            },
            "UpdateOfferPriceRequest": {
                "required": [
                    "pricing"
                ],
                "type": "object",
                "properties": {
                    "pricing": {
                        "$ref": "#/components/schemas/Pricing"
                    }
                }
            },
            "DeliveryOptionsRequestOrderItem": {
                "required": [
                    "orderItemId"
                ],
                "type": "object",
                "properties": {
                    "orderItemId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The id for the order item (1 order can have multiple order items).",
                        "example": "2012345678"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "The quantity of the order item for which the shipping label creation is requested for. If omitted, will be interpreted as the full quantity that is still open for this order item.",
                        "format": "int32",
                        "example": 1
                    }
                },
                "description": "Order items for which the delivery options are requested."
            },
            "ShippingLabelRequest": {
                "required": [
                    "orderItems",
                    "shippingLabelOfferId"
                ],
                "type": "object",
                "properties": {
                    "orderItems": {
                        "minItems": 1,
                        "type": "array",
                        "description": "Order items for which the delivery options are requested.",
                        "items": {
                            "$ref": "#/components/schemas/DeliveryOptionsRequestOrderItem"
                        }
                    },
                    "shippingLabelOfferId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Shipping label offer id for which you request a shipping label.",
                        "example": "027b79fa-5743-40f0-94c7-0eac761af611"
                    }
                },
                "description": "The configuration of order items to get delivery options for."
            },
            "DeliveryOptionsRequest": {
                "required": [
                    "orderItems"
                ],
                "type": "object",
                "properties": {
                    "orderItems": {
                        "minItems": 1,
                        "type": "array",
                        "description": "Order items for which the delivery options are requested.",
                        "items": {
                            "$ref": "#/components/schemas/DeliveryOptionsRequestOrderItem"
                        }
                    }
                },
                "description": "The configuration of order items to get delivery options for."
            },
            "DeliveryOption": {
                "required": [
                    "labelDisplayName",
                    "labelPrice",
                    "labelType",
                    "packageRestrictions",
                    "recommended",
                    "shippingLabelOfferId",
                    "transporterCode"
                ],
                "type": "object",
                "properties": {
                    "shippingLabelOfferId": {
                        "type": "string",
                        "description": "Unique identifier for the shipping label offer.",
                        "example": "027b79fa-5743-40f0-94c7-0eac761af611"
                    },
                    "recommended": {
                        "type": "boolean",
                        "description": "Indicates whether this delivery option is recommended to be the best option to ship your order item(s) with.",
                        "example": true
                    },
                    "validUntilDate": {
                        "type": "string",
                        "description": "The date until the delivery option (incl total price) is valid.",
                        "format": "date",
                        "example": "2020-01-12"
                    },
                    "transporterCode": {
                        "type": "string",
                        "description": "A code representing the transporter which is being used for transportation.",
                        "example": "TNT"
                    },
                    "labelType": {
                        "type": "string",
                        "description": "The type of the label, representing the way an item is being transported. MAILBOX is a mailbox package with delivery scan. MAILBOX_LIGHT is a mailbox package without delivery scan. PARCEL is a normal package.",
                        "example": "PARCEL",
                        "enum": [
                            "PARCEL",
                            "MAILBOX",
                            "MAILBOX_LIGHT"
                        ]
                    },
                    "labelDisplayName": {
                        "type": "string",
                        "description": "The display name of the shipping label.",
                        "example": "PostNL & bol.com - Pakket"
                    },
                    "labelPrice": {
                        "$ref": "#/components/schemas/LabelPrice"
                    },
                    "packageRestrictions": {
                        "$ref": "#/components/schemas/PackageRestrictions"
                    },
                    "handoverDetails": {
                        "$ref": "#/components/schemas/HandoverDetails"
                    }
                },
                "description": "A delivery option shows how and the costs of a transport for a shippable configuration"
            },
            "DeliveryOptionsResponse": {
                "required": [
                    "deliveryOptions"
                ],
                "type": "object",
                "properties": {
                    "deliveryOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeliveryOption"
                        }
                    }
                },
                "description": "The possible delivery options based on a shippable configuration"
            },
            "HandoverDetails": {
                "type": "object",
                "properties": {
                    "meetsCustomerExpectation": {
                        "type": "boolean",
                        "description": "Indicates if you can use this label without receiving a strike if you handover before the latestHandoverDateTime. If this field is 'false' you can still buy and use this label but it will have negative consequences on your performance score because the order will be delivered too early or too late.",
                        "example": true
                    },
                    "earliestHandoverDateTime": {
                        "type": "string",
                        "description": "The date and time at which the parcel can be earliest  at the transporter to make sure your parcel is delivered on time.",
                        "format": "date-time",
                        "example": "2018-04-19T00:00:00+02:00"
                    },
                    "latestHandoverDateTime": {
                        "type": "string",
                        "description": "The date and time at which the parcel must ultimately be at the transporter to make sure your parcel is delivered on time. If you handover after this date you will receive a strike because you order will be delivered too late.",
                        "format": "date-time",
                        "example": "2018-04-19T19:00:00+02:00"
                    },
                    "collectionMethod": {
                        "type": "string",
                        "description": "The type of collection for this parcel.",
                        "example": "DROP_OFF",
                        "enum": [
                            "DROP_OFF",
                            "PICK_UP"
                        ]
                    }
                }
            },
            "LabelPrice": {
                "required": [
                    "totalPrice"
                ],
                "type": "object",
                "properties": {
                    "totalPrice": {
                        "type": "number",
                        "description": "The price that is charged for this delivery option, excluding VAT.",
                        "example": 2.88
                    }
                }
            },
            "PackageRestrictions": {
                "required": [
                    "maxDimensions",
                    "maxWeight"
                ],
                "type": "object",
                "properties": {
                    "maxWeight": {
                        "type": "string",
                        "description": "The weight of a package.",
                        "example": "10 kg"
                    },
                    "maxDimensions": {
                        "type": "string",
                        "description": "The dimensions of a package.",
                        "example": "10 x 10 x 10 cm"
                    }
                }
            },
            "OrderItem": {
                "required": [
                    "orderItemId"
                ],
                "type": "object",
                "properties": {
                    "orderItemId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The order item being confirmed.",
                        "example": "2012345678"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "The quantity of the order items to ship. If omitted, will be interpreted as the full quantity that is still open for this order item.",
                        "format": "int32",
                        "example": 1
                    }
                },
                "description": "List of order items to ship."
            },
            "ShipmentRequest": {
                "required": [
                    "orderItems"
                ],
                "type": "object",
                "properties": {
                    "orderItems": {
                        "maxItems": 100,
                        "minItems": 1,
                        "type": "array",
                        "description": "List of order items to ship.",
                        "items": {
                            "$ref": "#/components/schemas/OrderItem"
                        }
                    },
                    "shipmentReference": {
                        "maxLength": 90,
                        "minLength": 0,
                        "type": "string",
                        "description": "A user-defined reference that you can provide to add to the shipment. Can be used for own administration purposes. Only 'null' or non-empty strings accepted.",
                        "example": "B321SR"
                    },
                    "shippingLabelId": {
                        "type": "string",
                        "description": "The identifier of the purchased shipping label.",
                        "example": "d4c50077-0c19-435f-9bee-1b30b9f4ba1a"
                    },
                    "transport": {
                        "$ref": "#/components/schemas/TransportInstruction"
                    }
                }
            },
            "TransportInstruction": {
                "required": [
                    "transporterCode"
                ],
                "type": "object",
                "properties": {
                    "transporterCode": {
                        "type": "string",
                        "description": "Specify the transporter that will carry out the shipment.",
                        "example": "TNT"
                    },
                    "trackAndTrace": {
                        "type": "string",
                        "description": "The track and trace code that is associated with this transport.",
                        "example": "3SBOL0987654321"
                    }
                }
            },
            "CreateReturnRequest": {
                "required": [
                    "handlingResult",
                    "orderItemId",
                    "quantityReturned"
                ],
                "type": "object",
                "properties": {
                    "orderItemId": {
                        "type": "string",
                        "description": "The id for the order item. One order can have multiple order items, but the list can only take one item.",
                        "example": "2012345678"
                    },
                    "quantityReturned": {
                        "maximum": 9999,
                        "minimum": 1,
                        "type": "integer",
                        "description": "The quantity of items returned.",
                        "format": "int32",
                        "example": 1
                    },
                    "handlingResult": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The handling result requested by the retailer.",
                        "example": "RETURN_RECEIVED",
                        "enum": [
                            "RETURN_RECEIVED",
                            "EXCHANGE_PRODUCT",
                            "RETURN_DOES_NOT_MEET_CONDITIONS",
                            "REPAIR_PRODUCT",
                            "CUSTOMER_KEEPS_PRODUCT_PAID"
                        ]
                    }
                }
            },
            "CreateAddress": {
                "required": [
                    "attentionOf",
                    "city",
                    "countryCode",
                    "houseNumber",
                    "streetName",
                    "zipCode"
                ],
                "type": "object",
                "properties": {
                    "streetName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The street name of the pickup address.",
                        "example": "Dorpstraat"
                    },
                    "houseNumber": {
                        "type": "string",
                        "description": "The house number of the pickup address.",
                        "example": "1"
                    },
                    "zipCode": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The zip code in '1234AB' format for NL and '0000' for BE addresses.",
                        "example": "1111ZZ"
                    },
                    "houseNumberExtension": {
                        "type": "string",
                        "description": "The extension of the house number.",
                        "example": "B"
                    },
                    "city": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The city of the pickup address.",
                        "example": "Utrecht"
                    },
                    "countryCode": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The ISO 3166-2 country code.",
                        "example": "NL"
                    },
                    "attentionOf": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Name of the person responsible for this replenishment.",
                        "example": "Billie Bol"
                    }
                }
            },
            "CreateDeliveryInfo": {
                "required": [
                    "expectedDeliveryDate",
                    "transporterCode"
                ],
                "type": "object",
                "properties": {
                    "expectedDeliveryDate": {
                        "type": "string",
                        "description": "The expected delivery date of the shipment at the bol.com warehouse. In ISO 8601 format.",
                        "example": "2021-01-01"
                    },
                    "transporterCode": {
                        "type": "string",
                        "description": "The transporter code that correlates to the transport used for this replenishment.",
                        "example": "POSTNL",
                        "enum": [
                            "POSTNL",
                            "DHL",
                            "DPD",
                            "GLS",
                            "UPS",
                            "OTHER"
                        ]
                    }
                }
            },
            "CreatePickupAppointment": {
                "required": [
                    "address",
                    "pickupTimeSlot"
                ],
                "type": "object",
                "properties": {
                    "address": {
                        "$ref": "#/components/schemas/CreateAddress"
                    },
                    "pickupTimeSlot": {
                        "$ref": "#/components/schemas/CreatePickupTimeSlot"
                    },
                    "commentToTransporter": {
                        "type": "string",
                        "description": "A comment to the transporter regarding the pickup appointment.",
                        "example": "Eerste verdieping."
                    }
                }
            },
            "CreatePickupTimeSlot": {
                "required": [
                    "fromDateTime",
                    "untilDateTime"
                ],
                "type": "object",
                "properties": {
                    "fromDateTime": {
                        "type": "string",
                        "description": "The selected start date and time for the replenishment pickup appointment. In ISO 8601 format.",
                        "example": "2021-01-01T09:00:00+01:00"
                    },
                    "untilDateTime": {
                        "type": "string",
                        "description": "The selected end date and time for the replenishment pickup appointment. In ISO 8601 format.",
                        "example": "2021-01-01T10:00:00+01:00"
                    }
                }
            },
            "CreateReplenishmentLine": {
                "required": [
                    "ean",
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "ean": {
                        "type": "string",
                        "description": "The EAN number associated with this product.",
                        "example": "0000007740404"
                    },
                    "quantity": {
                        "maximum": 9999,
                        "minimum": 1,
                        "type": "integer",
                        "description": "The number of announced items.",
                        "format": "int32",
                        "example": 1
                    }
                }
            },
            "CreateReplenishmentRequest": {
                "required": [
                    "labelingByBol",
                    "lines",
                    "numberOfLoadCarriers",
                    "reference"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "type": "string",
                        "description": "Custom user reference for this replenishment. Must contain at least 1 digit and only upper case characters allowed.",
                        "example": "REFERENCE1"
                    },
                    "deliveryInfo": {
                        "$ref": "#/components/schemas/CreateDeliveryInfo"
                    },
                    "labelingByBol": {
                        "type": "boolean",
                        "description": "Indicates whether the replenishment will be labeled by bol.com.",
                        "example": false
                    },
                    "numberOfLoadCarriers": {
                        "maximum": 66,
                        "minimum": 1,
                        "type": "integer",
                        "description": "The number of parcels in this replenishment. Note: if you are using the bol.com pickup service, the maximum number is 20.",
                        "format": "int32",
                        "example": 10
                    },
                    "pickupAppointment": {
                        "$ref": "#/components/schemas/CreatePickupAppointment"
                    },
                    "lines": {
                        "maxItems": 9999,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateReplenishmentLine"
                        }
                    }
                }
            },
            "ProductLabelsProduct": {
                "required": [
                    "ean",
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "ean": {
                        "type": "string",
                        "description": "The EAN number associated with this product.",
                        "example": "0000007740404"
                    },
                    "quantity": {
                        "maximum": 9999,
                        "minimum": 1,
                        "type": "integer",
                        "description": "The number of products to generate labels for.",
                        "format": "int32",
                        "example": 1
                    }
                }
            },
            "ProductLabelsRequest": {
                "required": [
                    "labelFormat",
                    "products"
                ],
                "type": "object",
                "properties": {
                    "labelFormat": {
                        "type": "string",
                        "description": "The printer format to create labels for.",
                        "example": "AVERY_J8159",
                        "enum": [
                            "AVERY_J8159",
                            "AVERY_J8160",
                            "AVERY_3474",
                            "DYMO_99012",
                            "BROTHER_DK11208D",
                            "ZEBRA_Z_PERFORM_1000T"
                        ]
                    },
                    "products": {
                        "maxItems": 250,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductLabelsProduct"
                        }
                    }
                }
            },
            "Ean": {
                "required": [
                    "ean"
                ],
                "type": "object",
                "properties": {
                    "ean": {
                        "type": "string",
                        "description": "The EAN number associated with this product.",
                        "example": "0000007740404"
                    }
                }
            },
            "RequestProductDestinationsRequest": {
                "required": [
                    "eans"
                ],
                "type": "object",
                "properties": {
                    "eans": {
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Ean"
                        }
                    }
                }
            },
            "PickupTimeSlotsAddress": {
                "required": [
                    "city",
                    "countryCode",
                    "houseNumber",
                    "streetName",
                    "zipCode"
                ],
                "type": "object",
                "properties": {
                    "streetName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The street name of the pickup address.",
                        "example": "Dorpstraat"
                    },
                    "houseNumber": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The house number of the pickup address.",
                        "example": "1"
                    },
                    "houseNumberExtension": {
                        "type": "string",
                        "description": "The extension of the house number.",
                        "example": "B"
                    },
                    "zipCode": {
                        "maxLength": 8,
                        "minLength": 1,
                        "type": "string",
                        "description": "The zip code in '1234AB' format for NL and '0000' for BE addresses.",
                        "example": "1111ZZ"
                    },
                    "city": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The city of the pickup address.",
                        "example": "Utrecht"
                    },
                    "countryCode": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The ISO 3166-2 country code.",
                        "example": "NL"
                    }
                }
            },
            "PickupTimeSlotsRequest": {
                "required": [
                    "address",
                    "numberOfLoadCarriers"
                ],
                "type": "object",
                "properties": {
                    "address": {
                        "$ref": "#/components/schemas/PickupTimeSlotsAddress"
                    },
                    "numberOfLoadCarriers": {
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer",
                        "description": "The number of load carriers in this shipment.",
                        "format": "int32",
                        "example": 1
                    }
                }
            },
            "PickupTimeSlot": {
                "required": [
                    "fromDateTime",
                    "untilDateTime"
                ],
                "type": "object",
                "properties": {
                    "fromDateTime": {
                        "type": "string",
                        "description": "The available start date and time for the pickup appointment. In ISO 8601 format.",
                        "format": "date-time",
                        "example": "2021-01-01T09:00:00+01:00"
                    },
                    "untilDateTime": {
                        "type": "string",
                        "description": "The available end date and time for the pickup appointment. In ISO 8601 format.",
                        "format": "date-time",
                        "example": "2021-01-01T10:00:00+01:00"
                    }
                }
            },
            "PickupTimeSlotsResponse": {
                "type": "object",
                "properties": {
                    "timeSlots": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PickupTimeSlot"
                        }
                    }
                }
            },
            "ProductListFilterRange": {
                "required": [
                    "max",
                    "min",
                    "rangeId"
                ],
                "type": "object",
                "properties": {
                    "rangeId": {
                        "maxLength": 11,
                        "minLength": 1,
                        "type": "string",
                        "description": "The id of the range filter the products can be found within.",
                        "example": "PRICE"
                    },
                    "min": {
                        "type": "number",
                        "description": "The minimum value for the range that can be used to filter the products."
                    },
                    "max": {
                        "type": "number",
                        "description": "The maximum value for the range that can be used to filter the products."
                    }
                },
                "description": "The list of range filters to get associated products for."
            },
            "ProductListFilterValue": {
                "required": [
                    "filterValueId"
                ],
                "type": "object",
                "properties": {
                    "filterValueId": {
                        "type": "string",
                        "description": "The unique identifier of the filter value.",
                        "example": "30639"
                    }
                },
                "description": "The list of filter values in this filter."
            },
            "ProductListRequest": {
                "required": [
                    "page"
                ],
                "type": "object",
                "properties": {
                    "countryCode": {
                        "type": "string",
                        "description": "The country for which the products will be retrieved.",
                        "example": "NL",
                        "default": "NL",
                        "enum": [
                            "NL",
                            "BE"
                        ]
                    },
                    "searchTerm": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "The search term to get the associated products for.",
                        "example": "laptop"
                    },
                    "categoryId": {
                        "maxLength": 11,
                        "minLength": 1,
                        "type": "string",
                        "description": "The category to get the associated products for.",
                        "example": "4770"
                    },
                    "filterRanges": {
                        "maxItems": 10,
                        "minItems": 0,
                        "type": "array",
                        "description": "The list of range filters to get associated products for.",
                        "items": {
                            "$ref": "#/components/schemas/ProductListFilterRange"
                        }
                    },
                    "filterValues": {
                        "maxItems": 10,
                        "minItems": 0,
                        "type": "array",
                        "description": "The list of filter values in this filter.",
                        "items": {
                            "$ref": "#/components/schemas/ProductListFilterValue"
                        }
                    },
                    "sort": {
                        "type": "string",
                        "description": "Determines the order of the products.",
                        "enum": [
                            "RELEVANCE",
                            "POPULARITY",
                            "PRICE_ASC",
                            "PRICE_DESC",
                            "RELEASE_DATE",
                            "RATING",
                            "WISHLIST"
                        ]
                    },
                    "page": {
                        "maximum": 200,
                        "minimum": 1,
                        "type": "integer",
                        "description": "The requested page number with a page size of 50 items.",
                        "format": "int32",
                        "default": 1
                    }
                }
            },
            "ProductListProduct": {
                "required": [
                    "eans",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "The title of the product.",
                        "example": "Product title"
                    },
                    "eans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductListProductEan"
                        }
                    }
                },
                "description": "The list of products that is associated with the given search term or category and filters."
            },
            "ProductListProductEan": {
                "required": [
                    "ean"
                ],
                "type": "object",
                "properties": {
                    "ean": {
                        "type": "string",
                        "description": "The EAN number associated with this product.",
                        "example": "0000007740404"
                    }
                }
            },
            "ProductListResponse": {
                "required": [
                    "products",
                    "sort"
                ],
                "type": "object",
                "properties": {
                    "products": {
                        "type": "array",
                        "description": "The list of products that is associated with the given search term or category and filters.",
                        "items": {
                            "$ref": "#/components/schemas/ProductListProduct"
                        }
                    },
                    "sort": {
                        "type": "string",
                        "description": "Determines the order of the products.",
                        "example": "RELEVANCE",
                        "enum": [
                            "RELEVANCE",
                            "POPULARITY",
                            "PRICE_ASC",
                            "PRICE_DESC",
                            "RELEASE_DATE",
                            "RATING",
                            "WISHLIST"
                        ]
                    }
                }
            },
            "Condition": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The condition of the offered product.",
                        "example": "AS_NEW",
                        "enum": [
                            "NEW",
                            "AS_NEW",
                            "GOOD",
                            "REASONABLE",
                            "MODERATE"
                        ]
                    },
                    "category": {
                        "type": "string",
                        "description": "The category of the condition. If not given NEW or SECONDHAND is derived from NAME.",
                        "example": "SECONDHAND",
                        "enum": [
                            "NEW",
                            "SECONDHAND"
                        ]
                    },
                    "comment": {
                        "maxLength": 2000,
                        "minLength": 0,
                        "type": "string",
                        "description": "The description of the condition of the product. Only allowed if name is not NEW and may not contain e-mail addresses.",
                        "example": "Heeft een koffie vlek op de kaft."
                    }
                }
            },
            "CreateOfferRequest": {
                "required": [
                    "condition",
                    "ean",
                    "fulfilment",
                    "pricing",
                    "stock"
                ],
                "type": "object",
                "properties": {
                    "ean": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The EAN number associated with this product. Note: in case an ISBN is provided, the ISBN will be replaced with the actual EAN belonging to this ISBN.",
                        "example": "0000007740404"
                    },
                    "economicOperatorId": {
                        "type": "string",
                        "description": "An identifier referring to the Economic operator entity (manufacturer, authorized party, importer, distributor or other natural person or legal entity for whom the obligations apply with regards to the manufacturing, or making available on the market of the product in line with the applicable EU laws).",
                        "example": "90bfddc5-a6d0-4986-9253-407b3a6850ca"
                    },
                    "condition": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "reference": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string",
                        "description": "A user-defined reference that helps you identify this particular offer when receiving data from us. This element can optionally be left empty and has a maximum amount of 100 characters.",
                        "example": "REF12345"
                    },
                    "onHoldByRetailer": {
                        "type": "boolean",
                        "description": "This field specifies whether the retailer has temporarily suspended the listing of this offer on the bol.com website. When set to true, the offer becomes invisible to customers and is not available for purchase. The default setting, false, indicates that the offer is active and visible on the website. This feature is useful for managing inventory or making updates to the offer without permanently removing it from the site.",
                        "example": false,
                        "default": false
                    },
                    "unknownProductTitle": {
                        "maxLength": 500,
                        "minLength": 0,
                        "type": "string",
                        "description": "In case the item is not known to bol.com you can use this field to identify this particular product. Note: in case the product is known to bol.com, the unknown product title will not be stored.",
                        "example": "Unknown Product Title"
                    },
                    "pricing": {
                        "$ref": "#/components/schemas/Pricing"
                    },
                    "stock": {
                        "$ref": "#/components/schemas/StockCreate"
                    },
                    "fulfilment": {
                        "$ref": "#/components/schemas/Fulfilment"
                    }
                }
            },
            "StockCreate": {
                "required": [
                    "amount",
                    "managedByRetailer"
                ],
                "type": "object",
                "properties": {
                    "amount": {
                        "maximum": 999,
                        "minimum": 0,
                        "type": "integer",
                        "description": "The amount of stock available for the specified product present in the retailers warehouse. Note: this should not be the FBB stock! Defaults to 0.",
                        "format": "int32",
                        "example": 6
                    },
                    "managedByRetailer": {
                        "type": "boolean",
                        "description": "Configures whether the retailer manages the stock levels or that bol.com should calculate the corrected stock based on actual open orders. In case the configuration is set to 'false', all open orders are used to calculate the corrected stock. In case the configuration is set to 'true', only orders that are placed after the last offer update are taken into account.",
                        "example": false
                    }
                }
            },
            "CreateUnpublishedOfferReportRequest": {
                "required": [
                    "format"
                ],
                "type": "object",
                "properties": {
                    "format": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The file format in which to return the export.",
                        "example": "CSV",
                        "enum": [
                            "CSV"
                        ]
                    }
                }
            },
            "CreateOfferExportRequest": {
                "required": [
                    "format"
                ],
                "type": "object",
                "properties": {
                    "format": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The file format in which to return the export.",
                        "example": "CSV",
                        "enum": [
                            "CSV"
                        ]
                    }
                }
            },
            "Asset": {
                "required": [
                    "labels",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "The URL of the asset.",
                        "example": "http://example.com"
                    },
                    "labels": {
                        "maxItems": 2,
                        "minItems": 1,
                        "type": "array",
                        "description": "The label(s) of the asset.",
                        "example": [
                            "FRONT"
                        ],
                        "items": {
                            "type": "string",
                            "description": "The label(s) of the asset.",
                            "example": "[\"FRONT\"]"
                        }
                    }
                }
            },
            "Attribute": {
                "required": [
                    "id",
                    "values"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "The identifier of the attribute for which the value has changed.",
                        "example": "Width"
                    },
                    "values": {
                        "maxItems": 300,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AttributeValue"
                        }
                    }
                },
                "description": "A list of attributes. Every content update request should have one \"EAN\" attribute to link changes to a proper product."
            },
            "AttributeValue": {
                "required": [
                    "unitId",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "maxLength": 10000,
                        "minLength": 1,
                        "type": "string",
                        "description": "The value of the attribute.",
                        "example": "14.5"
                    },
                    "unitId": {
                        "type": "string",
                        "description": "The unit identifier of the attribute.",
                        "example": "mm"
                    }
                }
            },
            "CreateProductContentSingleRequest": {
                "required": [
                    "attributes",
                    "language"
                ],
                "type": "object",
                "properties": {
                    "language": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The language in which content is submitted.",
                        "example": "nl",
                        "enum": [
                            "nl",
                            "nl-BE",
                            "fr",
                            "fr-BE"
                        ]
                    },
                    "attributes": {
                        "maxItems": 150,
                        "minItems": 1,
                        "type": "array",
                        "description": "A list of attributes. Every content update request should have one \"EAN\" attribute to link changes to a proper product.",
                        "items": {
                            "$ref": "#/components/schemas/Attribute"
                        }
                    },
                    "assets": {
                        "maxItems": 30,
                        "minItems": 0,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Asset"
                        }
                    }
                }
            },
            "ChunkRecommendationsAttribute": {
                "required": [
                    "id",
                    "values"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The identifier of the attribute.",
                        "example": "Name"
                    },
                    "values": {
                        "maxItems": 1,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChunkRecommendationsValue"
                        }
                    }
                }
            },
            "ChunkRecommendationsAttributes": {
                "required": [
                    "attributes"
                ],
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChunkRecommendationsAttribute"
                        }
                    }
                }
            },
            "ChunkRecommendationsRequest": {
                "required": [
                    "productContents"
                ],
                "type": "object",
                "properties": {
                    "productContents": {
                        "maxItems": 1,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChunkRecommendationsAttributes"
                        }
                    }
                }
            },
            "ChunkRecommendationsValue": {
                "required": [
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "maxLength": 10000,
                        "minLength": 1,
                        "type": "string",
                        "description": "The value of the attribute.",
                        "example": "Bananas"
                    }
                }
            },
            "ChunkRecommendationsPrediction": {
                "required": [
                    "chunkId",
                    "probability"
                ],
                "type": "object",
                "properties": {
                    "chunkId": {
                        "type": "string",
                        "description": "The identifier of the predicted GPC/Product Classification.",
                        "example": "80007268"
                    },
                    "probability": {
                        "type": "number",
                        "description": "The probability of the predicted chunk as a ratio, with eleven decimals of precision.",
                        "format": "double",
                        "example": 0.120168649
                    }
                }
            },
            "ChunkRecommendationsPredictions": {
                "required": [
                    "predictions"
                ],
                "type": "object",
                "properties": {
                    "predictions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChunkRecommendationsPrediction"
                        }
                    }
                }
            },
            "ChunkRecommendationsResponse": {
                "required": [
                    "recommendations"
                ],
                "type": "object",
                "properties": {
                    "recommendations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChunkRecommendationsPredictions"
                        }
                    }
                }
            },
            "CommissionProducts": {
                "required": [
                    "products"
                ],
                "type": "object",
                "properties": {
                    "products": {
                        "maxItems": 100,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Ean"
                        }
                    }
                }
            },
            "BulkCommissionRatesMultiStatusResponse": {
                "required": [
                    "failedQueries",
                    "successfulQueries"
                ],
                "type": "object",
                "properties": {
                    "successfulQueries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommissionSuccessfulQuery"
                        }
                    },
                    "failedQueries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommissionFailedQuery"
                        }
                    }
                }
            },
            "CommissionDateRange": {
                "required": [
                    "endDate",
                    "rates",
                    "startDate"
                ],
                "type": "object",
                "properties": {
                    "startDate": {
                        "type": "string",
                        "description": "The inclusive start date (in ISO 8601 format) from which the commission applies",
                        "example": "1970-01-01"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The exclusive end date (in ISO 8601 format) after which the commission no longer applies.",
                        "example": "1970-01-01"
                    },
                    "rates": {
                        "type": "array",
                        "description": "An array of objects, each describing commission rates for a specific condition.",
                        "items": {
                            "$ref": "#/components/schemas/CommissionDateRate"
                        }
                    }
                },
                "description": "An array of objects, each describing a period during which certain commission rates apply."
            },
            "CommissionDateRate": {
                "required": [
                    "condition",
                    "priceRanges"
                ],
                "type": "object",
                "properties": {
                    "condition": {
                        "type": "string",
                        "description": "Condition of the product.",
                        "example": "NEW"
                    },
                    "priceRanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommissionPriceRange"
                        }
                    }
                },
                "description": "An array of objects, each describing commission rates for a specific condition."
            },
            "CommissionFailedQuery": {
                "required": [
                    "index",
                    "status",
                    "violations"
                ],
                "type": "object",
                "properties": {
                    "index": {
                        "type": "number",
                        "description": "This provides the location of the entity where it was provided in the original response body.",
                        "example": 1
                    },
                    "status": {
                        "type": "integer",
                        "description": "HTTP status code for individual entity operation.",
                        "format": "int32",
                        "example": 400
                    },
                    "violations": {
                        "type": "array",
                        "description": "Outlines the list of violations encountered in the API for the specific index detailing the nature and reason for the issue.",
                        "items": {
                            "$ref": "#/components/schemas/Violation"
                        }
                    }
                }
            },
            "CommissionPriceRange": {
                "required": [
                    "fixedAmount",
                    "percentage",
                    "range",
                    "reductionApplied"
                ],
                "type": "object",
                "properties": {
                    "range": {
                        "$ref": "#/components/schemas/CommissionRange"
                    },
                    "fixedAmount": {
                        "type": "number",
                        "description": "The fixed commission amount excluding VAT.",
                        "example": 0
                    },
                    "percentage": {
                        "type": "number",
                        "description": "A percentage of commission, based on the intended selling price per unit, excluding VAT.",
                        "example": 20
                    },
                    "reductionApplied": {
                        "type": "boolean",
                        "description": "A boolean flag indicating whether a reduction is applied to the commission or not.",
                        "example": true
                    }
                }
            },
            "CommissionRange": {
                "required": [
                    "lower"
                ],
                "type": "object",
                "properties": {
                    "lower": {
                        "type": "number",
                        "description": "The inclusive lower price threshold for which the commission is valid.",
                        "example": 0
                    },
                    "upper": {
                        "type": "number",
                        "description": "The exclusive upper price threshold for which the commission is valid.",
                        "example": 10
                    }
                },
                "description": "Defines a specific price range for which the commission rates apply including VAT."
            },
            "CommissionRate": {
                "required": [
                    "dateRanges",
                    "ean"
                ],
                "type": "object",
                "properties": {
                    "ean": {
                        "type": "string",
                        "description": "The EAN number associated with this product.",
                        "example": "0000007740404"
                    },
                    "dateRanges": {
                        "type": "array",
                        "description": "An array of objects, each describing a period during which certain commission rates apply.",
                        "items": {
                            "$ref": "#/components/schemas/CommissionDateRange"
                        }
                    }
                }
            },
            "CommissionSuccessfulQuery": {
                "required": [
                    "commissionRates",
                    "index",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "index": {
                        "type": "number",
                        "description": "This provides the location of the entity where it was provided in the original response body.",
                        "example": 0
                    },
                    "status": {
                        "type": "integer",
                        "description": "HTTP status code for individual entity operation.",
                        "format": "int32",
                        "example": 200
                    },
                    "commissionRates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommissionRate"
                        }
                    }
                }
            },
            "BulkCommissionQuery": {
                "required": [
                    "ean",
                    "unitPrice"
                ],
                "type": "object",
                "properties": {
                    "ean": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The EAN number associated with this product.",
                        "example": "0000007740404"
                    },
                    "condition": {
                        "type": "string",
                        "description": "The condition of the offer.",
                        "example": "NEW",
                        "enum": [
                            "NEW",
                            "AS_NEW",
                            "GOOD",
                            "REASONABLE",
                            "MODERATE"
                        ]
                    },
                    "unitPrice": {
                        "maximum": 9999,
                        "minimum": 0,
                        "type": "number",
                        "description": "The price of the product with a period as a decimal separator. The price should always have two decimals precision.",
                        "example": 59
                    }
                }
            },
            "BulkCommissionRequest": {
                "required": [
                    "commissionQueries"
                ],
                "type": "object",
                "properties": {
                    "commissionQueries": {
                        "maxItems": 100,
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BulkCommissionQuery"
                        }
                    }
                }
            },
            "BulkCommissionResponse": {
                "required": [
                    "commissions"
                ],
                "type": "object",
                "properties": {
                    "commissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Commission"
                        }
                    }
                }
            },
            "Commission": {
                "required": [
                    "condition",
                    "ean",
                    "fixedAmount",
                    "percentage",
                    "reductions",
                    "totalCost",
                    "unitPrice"
                ],
                "type": "object",
                "properties": {
                    "ean": {
                        "type": "string",
                        "description": "The EAN number associated with this product.",
                        "example": "0000007740404"
                    },
                    "condition": {
                        "type": "string",
                        "description": "The condition of the offer.",
                        "example": "NEW"
                    },
                    "unitPrice": {
                        "type": "number",
                        "description": "The intended selling price per single unit up to 2 decimals precision, including VAT.",
                        "example": 59
                    },
                    "fixedAmount": {
                        "type": "number",
                        "description": "A fixed commission fee, including VAT.",
                        "example": 0.99
                    },
                    "percentage": {
                        "type": "number",
                        "description": "A percentage of commission, based on the intended selling price per unit, including VAT.",
                        "example": 15
                    },
                    "totalCost": {
                        "type": "number",
                        "description": "The total commission for selling this product at bol.com. The price includes VAT for Dutch sellers, and excludes VAT for Belgium sellers.",
                        "example": 6.85
                    },
                    "totalCostWithoutReduction": {
                        "type": "number",
                        "description": "The total commission for selling this product at bol.com without reductions including VAT.",
                        "example": 9.84
                    },
                    "reductions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reduction"
                        }
                    }
                }
            },
            "Reduction": {
                "required": [
                    "costReduction",
                    "endDate",
                    "maximumPrice",
                    "startDate"
                ],
                "type": "object",
                "properties": {
                    "maximumPrice": {
                        "type": "number",
                        "description": "Maximum offer price that can be used to benefit from a commission reduction, including VAT.",
                        "example": 60
                    },
                    "costReduction": {
                        "type": "number",
                        "description": "A reduction to the commission if the maximum price criteria is met, including VAT.",
                        "example": 2.99
                    },
                    "startDate": {
                        "type": "string",
                        "description": "The start date from which the commission reduction is valid, in ISO 8601 format.",
                        "format": "date",
                        "example": "2018-01-01"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "The end date from which the commission reduction is not valid anymore, in ISO 8601 format.",
                        "format": "date",
                        "example": "2018-01-30"
                    }
                }
            },
            "SubscriptionResponse": {
                "required": [
                    "id",
                    "resources",
                    "subscriptionType",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier assigned to each event notification subscription. This ID is used for tracking and managing each subscription.",
                        "example": "1234"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Array of event types for which the subscription is set. Note that some event types are only available for certain subscription types.",
                            "example": "['PROCESS_STATUS']",
                            "enum": [
                                "TEST",
                                "PROCESS_STATUS",
                                "SHIPMENT",
                                "PRICE_STAR_BOUNDARY",
                                "COMPETING_OFFER",
                                "OFFER_FOR_SALE",
                                "OFFER_NOT_FOR_SALE"
                            ]
                        }
                    },
                    "url": {
                        "type": "string",
                        "description": "The destination for event notifications. For WEBHOOK subscription types, this is the URL where messages are posted to. For GCP_PUBSUB, this is the topic name.",
                        "example": "https://www.bol.com/webhook"
                    },
                    "subscriptionType": {
                        "type": "string",
                        "description": "The type of subscription. It indicates the platform where the events will be subscribed to. Be aware that certain event types are only available for specific types.",
                        "example": "WEBHOOK",
                        "enum": [
                            "WEBHOOK",
                            "GCP_PUBSUB",
                            "AWS_SQS"
                        ]
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the subscription is enabled and will receive notifications or not. Defaults to true.",
                        "example": true
                    },
                    "identity": {
                        "type": "string",
                        "description": "Identity needed for publishing a notification. Must be provided if subscriptionType = AWS_SQS and must be in format of AWS ARN.",
                        "example": "arn:aws:iam::<numeric AWS account id>:role/<role name>"
                    }
                }
            },
            "SubscriptionsResponse": {
                "required": [
                    "subscriptions"
                ],
                "type": "object",
                "properties": {
                    "subscriptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubscriptionResponse"
                        }
                    }
                }
            },
            "KeySet": {
                "required": [
                    "id",
                    "publicKey",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Key identifier. Maps to the keyId value in the signature header of the push request.",
                        "example": "0"
                    },
                    "type": {
                        "type": "string",
                        "description": "Key encryption type.",
                        "example": "RSA",
                        "enum": [
                            "RSA"
                        ]
                    },
                    "publicKey": {
                        "type": "string",
                        "description": "The Base64 encoded public key to use when verifying the signature.",
                        "example": "MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCDO7X3OGEqB6LU2ZQdznuYJX1KhCiJUB0+IwW9UjcgbU2Y/LzUIgGPT33s/+OqqMQOtXp2RV4JM6Zv5/YUZgZAqEIkvvrIYvJB8tXv73VQS2r4Ssy3Y/frJsqy8a3sDOoFeJygHYE6kVf3sOCdo4CO6PFUe7ZwsOSS2/7fNWAaMhY6tEuZwkA7ZLoSd3UHTdeKlV1TH5I3yFClMo1FwABsWzj9DhvEb6Q36j+QLJZAj0xvusJUsOjcSgyXRzVBFtwwNILzs9BO+GWRI4li+rjhaST2pNtvGfnQB5TUOO7Yegk/ucSiV1cFzy95gWQV2F0c9P1vBctETrYKxQBklBbjAgMBAAECggEAGISLVoi9/nA2x7VuqrLs/FvksItIV38UN4urgtddXT2OhcqSLL+9styTFjgofLXTCzx0iKwlCWsQ6U9Y9i6pdGL7GIplqBJ0WEXaGl2OeVXdwk2XOZv/sXsp24yzhapT/nmuKWvZvOtyl9//1vO5DPoQPExwpVUnHxji4SjDr6DuKVNDwh9Z4mVsdfdYVeLYGJ356IGWhTu/JDie4byl8B75UgbmyvfJRjQkoLpVZuhu+jkmhogpoSl6NtaKA+iFlGT9JLtGVHDn15kdEHb+dtzTzyJH40KGjQ7OiZcmA8GFft6zrNlOpyziH7fICtt0//7fR348/Z+XIYUFqfadQQKBgQDeVnqAlkt2Uab/1OjX9O8CRWqdoFLpUGDiHhkaXEylJtm1osFHGiyOi1eEQOy//lnJWKUp7c0b8D/QioP7kI38ES1mBx1KDzFgob4p/U+4R+z24SV/Q3CT6vHbfbe1XxWvE4SOdh4p7+Kuhxz1n6P0TWltvsTbpCJ9GM4wi2Z26QKBgQCXGiObkJI4Wv6RGxq76BHEDZdrLWppXh1+FYfyUaq6bfcSF86yAIRlleEJUh1v10KDw2DCX0rhO3BW0juEl5qz5RohLIxuak+2RbX6IQrVPwtCCeGQzKIRPktht+fi+eSaa5XNMLXURTzjVUdxzFwqDKp+7YQWL8DJ6qEfJGGYX6wKBgBXM8PIOypNtaiyHmdUjBRR57fxKrhaGdRl2zgtRpYpEBvDSZpUsMdZAP3KOUyh4LiGZ+Yfk80mcAwXVrx9Ji0J+BK+OXwbV+od5FIZVei2dj9SdOuoBmNZIITLeXtb/3cZu6X52gnqmNNncEbDb2F2qAX5rSC4pJ+CQQBduc7uRAoGAHzjxfqWi8S4sSAOXxJgxg5djYGwj/t3JrlH4o2OoqZkrYnu05CcjNHKB65EiKq3sM5gYgmayWukzOvoDH/fIakHey9fXTluezVwYt0NBf9e7ihoiakfG/0JSonbypTkXdw5OgsEp3YfHMJ0XtlhefbgDBY8IvF/HrnyzSKRYBD0CgYBlq6nIEZOIqngHdtskT8JOZBcniVPGjUjSiNcYQXfeMwKINUqDGC/YmpPgBOhO93ozeQTCBeeMD8nlbkTHPu7BxCCfpKj6/PPMfxmyFQyDg9ZjjHOIhUMddRw+mSq0zS212JbIr3O4eEtrXPqWfq5phxyE3dRvaX3A3wiEQN9WRA=="
                    }
                }
            },
            "KeySetResponse": {
                "required": [
                    "signatureKeys"
                ],
                "type": "object",
                "properties": {
                    "signatureKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KeySet"
                        }
                    }
                }
            },
            "ReducedShipment": {
                "required": [
                    "order",
                    "shipmentId",
                    "shipmentItems",
                    "shipmentReference",
                    "transport"
                ],
                "type": "object",
                "properties": {
                    "shipmentId": {
                        "type": "string",
                        "description": "A unique identifier for this shipment.",
                        "example": "541757635"
                    },
                    "shipmentDateTime": {
                        "type": "string",
                        "description": "The date and time in ISO 8601 format when the order item was shipped.",
                        "format": "date-time",
                        "example": "2018-04-17T10:55:37+02:00"
                    },
                    "shipmentReference": {
                        "type": "string",
                        "description": "Reference supplied by the user when this item was shipped.",
                        "example": "BOLCOM001"
                    },
                    "order": {
                        "$ref": "#/components/schemas/ReducedShipmentOrder"
                    },
                    "shipmentItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReducedShipmentItem"
                        }
                    },
                    "transport": {
                        "$ref": "#/components/schemas/ReducedTransport"
                    }
                }
            },
            "ReducedShipmentItem": {
                "required": [
                    "ean",
                    "orderItemId"
                ],
                "type": "object",
                "properties": {
                    "orderItemId": {
                        "type": "string",
                        "description": "A unique identifier for the item of the order that was shipped in this shipment.",
                        "example": "1234567891"
                    },
                    "ean": {
                        "type": "string",
                        "description": "The EAN number associated with this product.",
                        "example": "0000007740404"
                    }
                }
            },
            "ReducedShipmentOrder": {
                "required": [
                    "orderId"
                ],
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "string",
                        "description": "A unique identifier for the order this shipment is related to.",
                        "example": "4123456789"
                    },
                    "orderPlacedDateTime": {
                        "type": "string",
                        "description": "The date and time in ISO 8601 format when the order was placed.",
                        "format": "date-time",
                        "example": "2018-04-17T10:55:37+02:00"
                    }
                }
            },
            "ReducedTransport": {
                "required": [
                    "transportId"
                ],
                "type": "object",
                "properties": {
                    "transportId": {
                        "type": "string",
                        "description": "The transport id.",
                        "example": "312778947"
                    }
                }
            },
            "ShipmentsResponse": {
                "required": [
                    "shipments"
                ],
                "type": "object",
                "properties": {
                    "shipments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReducedShipment"
                        }
                    }
                }
            },
            "BillingDetails": {
                "required": [
                    "city",
                    "countryCode",
                    "email",
                    "firstName",
                    "houseNumber",
                    "salutation",
                    "streetName",
                    "surname",
                    "zipCode"
                ],
                "type": "object",
                "properties": {
                    "salutation": {
                        "type": "string",
                        "description": "The salutation of the customer.",
                        "example": "MALE",
                        "enum": [
                            "MALE",
                            "FEMALE",
                            "UNKNOWN"
                        ]
                    },
                    "firstName": {
                        "type": "string",
                        "description": "The first name of the customer.",
                        "example": "Billie"
                    },
                    "surname": {
                        "type": "string",
                        "description": "The surname of the customer.",
                        "example": "Jansen"
                    },
                    "streetName": {
                        "type": "string",
                        "description": "The street name.",
                        "example": "Dorpstraat"
                    },
                    "houseNumber": {
                        "type": "string",
                        "description": "The house number.",
                        "example": "1"
                    },
                    "houseNumberExtension": {
                        "type": "string",
                        "description": "The extension on the house number.",
                        "example": "B"
                    },
                    "extraAddressInformation": {
                        "type": "string",
                        "description": "Additional information related to the address that helps in delivering the package.",
                        "example": "Apartment"
                    },
                    "zipCode": {
                        "type": "string",
                        "description": "The ZIP code in '1234AB' format for NL orders and '0000' format for BE orders.",
                        "example": "1111ZZ"
                    },
                    "city": {
                        "type": "string",
                        "description": "The name of the city.",
                        "example": "Utrecht"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "The country code.",
                        "example": "NL"
                    },
                    "email": {
                        "type": "string",
                        "description": "A scrambled email address that can be used to contact the customer.",
                        "example": "billie@verkopen.bol.com"
                    },
                    "company": {
                        "type": "string",
                        "description": "The company name.",
                        "example": "bol.com"
                    },
                    "vatNumber": {
                        "type": "string",
                        "description": "The Value Added Tax (VAT) / BTW number for business sellers situated in the Netherlands.",
                        "example": "NL999999999B99"
                    },
                    "kvkNumber": {
                        "type": "string",
                        "description": "The Kamer van Koophandel (kvk) number for organizations situated in the Netherlands or ondernemingsnummer for organizations situated in Belgium.",
                        "example": "99887766"
                    },
                    "orderReference": {
                        "type": "string",
                        "description": "The order reference specified by the customer when ordering a product.",
                        "example": "MijnReferentie"
                    }
                },
                "description": "The details of the customer that is responsible for the financial fulfillment of this order."
            },
            "OrderOffer": {
                "type": "object",
                "properties": {
                    "offerId": {
                        "type": "string",
                        "description": "Unique identifier for an offer.",
                        "example": "6ff736b5-cdd0-4150-8c67-78269ee986f5"
                    },
                    "reference": {
                        "type": "string",
                        "description": "A user-defined reference that helps you identify this particular offer when receiving data from us. This element can optionally be left empty and has a maximum amount of 100 characters.",
                        "example": "BOLCOM00123"
                    }
                }
            },
            "OrderProduct": {
                "required": [
                    "ean",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "ean": {
                        "type": "string",
                        "description": "The EAN number associated with this product.",
                        "example": "0000007740404"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title of the product as shown on the webshop.",
                        "example": "Product Title"
                    }
                }
            },
            "Shipment": {
                "required": [
                    "order",
                    "shipmentId",
                    "shipmentItems",
                    "shipmentReference"
                ],
                "type": "object",
                "properties": {
                    "shipmentId": {
                        "type": "string",
                        "description": "A unique identifier for this shipment.",
                        "example": "541757635"
                    },
                    "shipmentDateTime": {
                        "type": "string",
                        "description": "The date and time in ISO 8601 format when the order item was shipped.",
                        "format": "date-time",
                        "example": "2018-04-17T10:55:37+02:00"
                    },
                    "shipmentReference": {
                        "type": "string",
                        "description": "Reference supplied by the user when this item was shipped.",
                        "example": "BOLCOM001"
                    },
                    "pickupPoint": {
                        "type": "boolean",
                        "description": "Indicates whether this order is shipped to a Pick Up Point.",
                        "example": true
                    },
                    "order": {
                        "$ref": "#/components/schemas/ShipmentOrder"
                    },
                    "shipmentDetails": {
                        "$ref": "#/components/schemas/ShipmentDetails"
                    },
                    "billingDetails": {
                        "$ref": "#/components/schemas/BillingDetails"
                    },
                    "shipmentItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipmentItem"
                        }
                    },
                    "transport": {
                        "$ref": "#/components/schemas/ShipmentTransport"
                    }
                }
            },
            "ShipmentDetails": {
                "required": [
                    "city",
                    "countryCode",
                    "firstName",
                    "houseNumber",
                    "salutation",
                    "streetName",
                    "surname",
                    "zipCode"
                ],
                "type": "object",
                "properties": {
                    "pickupPointName": {
                        "type": "string",
                        "description": "The name of Pick Up Point location this order needs to be shipped to.",
                        "example": "Albert Heijn: UTRECHT"
                    },
                    "salutation": {
                        "type": "string",
                        "description": "The salutation of the customer.",
                        "example": "MALE",
                        "enum": [
                            "MALE",
                            "FEMALE",
                            "UNKNOWN"
                        ]
                    },
                    "firstName": {
                        "type": "string",
                        "description": "The first name of the customer.",
                        "example": "Billie"
                    },
                    "surname": {
                        "type": "string",
                        "description": "The surname of the customer.",
                        "example": "Jansen"
                    },
                    "streetName": {
                        "type": "string",
                        "description": "The street name.",
                        "example": "Dorpstraat"
                    },
                    "houseNumber": {
                        "type": "string",
                        "description": "The house number.",
                        "example": "1"
                    },
                    "houseNumberExtension": {
                        "type": "string",
                        "description": "The extension on the house number.",
                        "example": "B"
                    },
                    "extraAddressInformation": {
                        "type": "string",
                        "description": "Additional information related to the address that helps in delivering the package.",
                        "example": "Apartment"
                    },
                    "zipCode": {
                        "type": "string",
                        "description": "The ZIP code in '1234AB' format for NL orders and '0000' format for BE orders.",
                        "example": "1111ZZ"
                    },
                    "city": {
                        "type": "string",
                        "description": "The name of the city.",
                        "example": "Utrecht"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "The country code.",
                        "example": "NL"
                    },
                    "email": {
                        "type": "string",
                        "description": "A scrambled email address that can be used to contact the customer.",
                        "example": "billie@verkopen.bol.com"
                    },
                    "company": {
                        "type": "string",
                        "description": "The company name.",
                        "example": "bol.com"
                    },
                    "deliveryPhoneNumber": {
                        "type": "string",
                        "description": "The delivery phone number of the customer. Filled in case the order requires an appointment for delivering the goods.",
                        "example": "012123456"
                    },
                    "language": {
                        "type": "string",
                        "description": "The language of the customer in case of contact.",
                        "example": "nl",
                        "enum": [
                            "nl",
                            "nl-BE",
                            "fr",
                            "fr-BE"
                        ]
                    }
                },
                "description": "The address details where this order needs to be shipped to. This can be the customers' own address, a (company) business address or a Pick Up Point address."
            },
            "ShipmentFulfilment": {
                "required": [
                    "method"
                ],
                "type": "object",
                "properties": {
                    "method": {
                        "type": "string",
                        "description": "The fulfilment method. Fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).",
                        "example": "FBR",
                        "enum": [
                            "FBR",
                            "FBB"
                        ]
                    },
                    "distributionParty": {
                        "type": "string",
                        "description": "The party that manages the distribution, either bol.com or the retailer itself.",
                        "example": "RETAILER",
                        "enum": [
                            "RETAILER",
                            "BOL"
                        ]
                    },
                    "latestDeliveryDate": {
                        "type": "string",
                        "description": "The ultimate delivery date at which this order must be delivered at the customer's shipping address. This field is empty in case the exactDeliveryDate is filled.",
                        "format": "date",
                        "example": "2017-02-10"
                    }
                }
            },
            "ShipmentItem": {
                "required": [
                    "orderItemId",
                    "quantity",
                    "unitPrice"
                ],
                "type": "object",
                "properties": {
                    "orderItemId": {
                        "type": "string",
                        "description": "A unique identifier for the item of the order that was shipped in this shipment.",
                        "example": "1234567891"
                    },
                    "fulfilment": {
                        "$ref": "#/components/schemas/ShipmentFulfilment"
                    },
                    "offer": {
                        "$ref": "#/components/schemas/OrderOffer"
                    },
                    "product": {
                        "$ref": "#/components/schemas/OrderProduct"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Amount of ordered products for this order item id.",
                        "format": "int32",
                        "example": 10
                    },
                    "quantityShipped": {
                        "type": "integer",
                        "description": "Amount of shipped products for this order item id.",
                        "format": "int32",
                        "example": 10
                    },
                    "unitPrice": {
                        "type": "number",
                        "description": "The selling price to the customer of a single unit including VAT.",
                        "example": 12.99
                    },
                    "commission": {
                        "type": "number",
                        "description": "The commission.",
                        "example": 5
                    }
                }
            },
            "ShipmentOrder": {
                "required": [
                    "orderId"
                ],
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "string",
                        "description": "A unique identifier for the order this shipment is related to.",
                        "example": "4123456789"
                    },
                    "orderPlacedDateTime": {
                        "type": "string",
                        "description": "The date and time in ISO 8601 format when the order was placed.",
                        "format": "date-time",
                        "example": "2018-04-17T10:55:37+02:00"
                    }
                }
            },
            "ShipmentTransport": {
                "required": [
                    "trackAndTrace"
                ],
                "type": "object",
                "properties": {
                    "transportId": {
                        "type": "string",
                        "description": "The transport id.",
                        "example": "312778947"
                    },
                    "transporterCode": {
                        "type": "string",
                        "description": "Specify the transporter that will carry out the shipment.",
                        "example": "TNT"
                    },
                    "trackAndTrace": {
                        "type": "string",
                        "description": "The track and trace code that is associated with this transport.",
                        "example": "3SBOL0987654321"
                    },
                    "shippingLabelId": {
                        "type": "string",
                        "description": "The shipping label id.",
                        "example": "123456789"
                    },
                    "transportEvents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransportEvent"
                        }
                    }
                }
            },
            "TransportEvent": {
                "required": [
                    "eventCode",
                    "eventDateTime"
                ],
                "type": "object",
                "properties": {
                    "eventCode": {
                        "type": "string",
                        "description": "The transport event code indicates the location of the parcel within the distribution process.",
                        "example": "AT_TRANSPORTER",
                        "enum": [
                            "PRE_ANNOUNCED",
                            "AT_TRANSPORTER",
                            "IN_TRANSIT",
                            "DELIVERED_AT_NEIGHBOURS",
                            "DELIVERED_AT_CUSTOMER",
                            "PICKED_UP_AT_PICK_UP_POINT",
                            "AT_PICK_UP_POINT",
                            "RETURNED_TO_SENDER",
                            "INBOUND_COLLECT"
                        ]
                    },
                    "eventDateTime": {
                        "type": "string",
                        "description": "The date time of the transport event.",
                        "format": "date-time",
                        "example": "2021-07-28T17:21:07+02:00"
                    }
                }
            },
            "InvoiceRequests": {
                "required": [
                    "shipmentId",
                    "status",
                    "statusTransitions"
                ],
                "type": "object",
                "properties": {
                    "shipmentId": {
                        "type": "string",
                        "description": "The id of the shipment associated with this invoice request.",
                        "example": "987654"
                    },
                    "orderId": {
                        "type": "string",
                        "description": "The id of the order associated with this shipment.",
                        "example": "4691862037"
                    },
                    "customerAccountNumber": {
                        "type": "string",
                        "description": "The account of the customer within bol.com associated with this shipment.",
                        "example": "3004850316"
                    },
                    "billingDetails": {
                        "$ref": "#/components/schemas/InvoiceRequestsBillingDetails"
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvoiceRequestsProducts"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of the invoice request.",
                        "example": "INVOICE_REQUESTED"
                    },
                    "statusTransitions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StatusTransitions"
                        }
                    }
                }
            },
            "InvoiceRequestsBillingDetails": {
                "required": [
                    "salutation"
                ],
                "type": "object",
                "properties": {
                    "salutation": {
                        "type": "string",
                        "description": "The salutation of the customer.",
                        "example": "MALE",
                        "enum": [
                            "MALE",
                            "FEMALE",
                            "UNKNOWN"
                        ]
                    },
                    "firstName": {
                        "type": "string",
                        "description": "The first name of the customer.",
                        "example": "Billie"
                    },
                    "surname": {
                        "type": "string",
                        "description": "The surname of the customer.",
                        "example": "Jansen"
                    },
                    "streetName": {
                        "type": "string",
                        "description": "The street name.",
                        "example": "Dorpstraat"
                    },
                    "houseNumber": {
                        "type": "string",
                        "description": "The house number.",
                        "example": "1"
                    },
                    "houseNumberExtension": {
                        "type": "string",
                        "description": "The extension on the house number.",
                        "example": "B"
                    },
                    "zipCode": {
                        "type": "string",
                        "description": "The ZIP code in '1234AB' format for NL orders and '0000' format for BE orders.",
                        "example": "1111ZZ"
                    },
                    "city": {
                        "type": "string",
                        "description": "The name of the city.",
                        "example": "Utrecht"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "The country code.",
                        "example": "NL"
                    },
                    "company": {
                        "type": "string",
                        "description": "The company name.",
                        "example": "bol.com"
                    },
                    "vatNumber": {
                        "type": "string",
                        "description": "The Value Added Tax (VAT) / BTW number for business sellers situated in the Netherlands.",
                        "example": "NL999999999B99"
                    },
                    "kvkNumber": {
                        "type": "string",
                        "description": "The Kamer van Koophandel (KvK) number for organizations situated in the Netherlands or ondernemingsnummer for organizations situated in Belgium.",
                        "example": "99887766"
                    }
                },
                "description": "The details of the customer that is responsible for the financial fulfillment of this shipment."
            },
            "InvoiceRequestsProducts": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the ordered product.",
                        "example": "Eucerin Hyaluron-filler"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Amount of the product being ordered.",
                        "format": "int32"
                    },
                    "unitPrice": {
                        "type": "number",
                        "description": "The selling price to the customer of a single unit including VAT.",
                        "example": 10
                    }
                }
            },
            "InvoiceRequestsResponse": {
                "required": [
                    "invoiceRequests"
                ],
                "type": "object",
                "properties": {
                    "invoiceRequests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvoiceRequests"
                        }
                    }
                }
            },
            "StatusTransitions": {
                "required": [
                    "status",
                    "statusDateTime"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Indicates the status of this invoice request.",
                        "example": "INVOICE_REQUESTED",
                        "enum": [
                            "INVOICE_REQUESTED",
                            "INVOICE_UPLOADED",
                            "INVOICE_INCORRECT",
                            "INVOICE_VIRUS_DETECTED",
                            "FINISHED"
                        ]
                    },
                    "statusDateTime": {
                        "type": "string",
                        "description": "The date and time in ISO 8601 format that indicates when this status was updated for this invoice request.",
                        "format": "date-time",
                        "example": "2020-12-09T12:34:56+01:00"
                    }
                }
            },
            "ReducedReturn": {
                "required": [
                    "fulfilmentMethod",
                    "registrationDateTime",
                    "returnId",
                    "returnItems"
                ],
                "type": "object",
                "properties": {
                    "returnId": {
                        "type": "string",
                        "description": "Unique identifier for a return.",
                        "example": "1"
                    },
                    "registrationDateTime": {
                        "type": "string",
                        "description": "The date and time in ISO 8601 format when this return was registered.",
                        "format": "date-time",
                        "example": "2016-11-14T11:06:48.423+01:00"
                    },
                    "fulfilmentMethod": {
                        "type": "string",
                        "description": "The fulfilment method. Fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).",
                        "example": "FBR"
                    },
                    "returnItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReducedReturnItem"
                        }
                    }
                }
            },
            "ReducedReturnItem": {
                "required": [
                    "ean",
                    "expectedQuantity",
                    "handled",
                    "orderId",
                    "processingResults",
                    "returnReason",
                    "rmaId"
                ],
                "type": "object",
                "properties": {
                    "rmaId": {
                        "type": "string",
                        "description": "The RMA (Return Merchandise Authorization) identifier of the return.",
                        "example": "31234567"
                    },
                    "orderId": {
                        "type": "string",
                        "description": "The id of the customer order this return item is in.",
                        "example": "4012345678"
                    },
                    "ean": {
                        "type": "string",
                        "description": "The EAN number associated with this product.",
                        "example": "9789076174082"
                    },
                    "expectedQuantity": {
                        "type": "integer",
                        "description": "The quantity that is expected to be returned by the customer. Note: this can be greater than 1 in case the customer ordered a quantity greater than 1 of the same product in the same customer order.",
                        "format": "int32",
                        "example": 1
                    },
                    "returnReason": {
                        "$ref": "#/components/schemas/ReturnReason"
                    },
                    "handled": {
                        "type": "boolean",
                        "description": "Indicates if this return item has been handled (by the retailer).",
                        "example": true
                    },
                    "processingResults": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReturnProcessingResult"
                        }
                    }
                }
            },
            "ReturnProcessingResult": {
                "required": [
                    "handlingResult",
                    "processingDateTime",
                    "processingResult",
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "quantity": {
                        "type": "integer",
                        "description": "The processed quantity.",
                        "format": "int32",
                        "example": 1
                    },
                    "processingResult": {
                        "type": "string",
                        "description": "The processing result of the return.",
                        "example": "ACCEPTED"
                    },
                    "handlingResult": {
                        "type": "string",
                        "description": "The handling result requested by the retailer.",
                        "example": "RETURN_RECEIVED"
                    },
                    "processingDateTime": {
                        "type": "string",
                        "description": "The date and time in ISO 8601 format when the return was processed.",
                        "format": "date-time",
                        "example": "2018-04-17T10:55:37+02:00"
                    }
                }
            },
            "ReturnReason": {
                "required": [
                    "customerComments",
                    "mainReason"
                ],
                "type": "object",
                "properties": {
                    "mainReason": {
                        "type": "string",
                        "description": "The main reason describing why the customer returned this product.",
                        "example": "Niet naar verwachting"
                    },
                    "detailedReason": {
                        "type": "string",
                        "description": "The sub reason describing why the customer returned this product in more detail.",
                        "example": "Niet naar verwachting"
                    },
                    "customerComments": {
                        "type": "string",
                        "description": "Additional details from the customer as to why this item was returned.",
                        "example": "Lorem Ipsum"
                    }
                },
                "description": "The reason why the customer returned this product."
            },
            "ReturnsResponse": {
                "required": [
                    "returns"
                ],
                "type": "object",
                "properties": {
                    "returns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReducedReturn"
                        }
                    }
                }
            },
            "CustomerDetails": {
                "required": [
                    "salutation"
                ],
                "type": "object",
                "properties": {
                    "salutation": {
                        "type": "string",
                        "description": "The salutation of the customer.",
                        "example": "MALE",
                        "enum": [
                            "MALE",
                            "FEMALE",
                            "UNKNOWN"
                        ]
                    },
                    "firstName": {
                        "type": "string",
                        "description": "The first name of the customer.",
                        "example": "Billie"
                    },
                    "surname": {
                        "type": "string",
                        "description": "The surname of the customer.",
                        "example": "Jansen"
                    },
                    "streetName": {
                        "type": "string",
                        "description": "The street name.",
                        "example": "Dorpstraat"
                    },
                    "houseNumber": {
                        "type": "string",
                        "description": "The house number.",
                        "example": "1"
                    },
                    "houseNumberExtension": {
                        "type": "string",
                        "description": "The extension on the house number.",
                        "example": "B"
                    },
                    "extraAddressInformation": {
                        "type": "string",
                        "description": "Additional information related to the address that helps in delivering the package.",
                        "example": "Apartment"
                    },
                    "zipCode": {
                        "type": "string",
                        "description": "The ZIP code in '1234AB' format for NL orders and '0000' format for BE orders.",
                        "example": "1111ZZ"
                    },
                    "city": {
                        "type": "string",
                        "description": "The name of the city.",
                        "example": "Utrecht"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "The country code.",
                        "example": "NL"
                    },
                    "email": {
                        "type": "string",
                        "description": "A scrambled email address that can be used to contact the customer.",
                        "example": "billie@verkopen.bol.com"
                    },
                    "deliveryPhoneNumber": {
                        "type": "string",
                        "description": "The delivery phone number of the customer. Filled in case the order requires an appointment for delivering the goods.",
                        "example": "012123456"
                    },
                    "company": {
                        "type": "string",
                        "description": "The company name.",
                        "example": "bol.com"
                    },
                    "vatNumber": {
                        "type": "string",
                        "description": "The Value Added Tax (VAT) / BTW number for business sellers situated in the Netherlands.",
                        "example": "NL999999999B99"
                    }
                },
                "description": "Information related to the customer."
            },
            "Return": {
                "required": [
                    "fulfilmentMethod",
                    "registrationDateTime",
                    "returnId",
                    "returnItems"
                ],
                "type": "object",
                "properties": {
                    "returnId": {
                        "type": "string",
                        "description": "Unique identifier for a return.",
                        "example": "1"
                    },
                    "registrationDateTime": {
                        "type": "string",
                        "description": "The date and time in ISO 8601 format when this return was registered.",
                        "format": "date-time",
                        "example": "2016-11-14T11:06:48.423+01:00"
                    },
                    "fulfilmentMethod": {
                        "type": "string",
                        "description": "The fulfilment method. Fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).",
                        "example": "FBR"
                    },
                    "returnItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReturnItem"
                        }
                    }
                }
            },
            "ReturnItem": {
                "required": [
                    "customerDetails",
                    "ean",
                    "expectedQuantity",
                    "handled",
                    "orderId",
                    "processingResults",
                    "returnReason",
                    "rmaId",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "rmaId": {
                        "type": "string",
                        "description": "The RMA (Return Merchandise Authorization) identifier of the return.",
                        "example": "31234567"
                    },
                    "orderId": {
                        "type": "string",
                        "description": "The id of the customer order this return item is in.",
                        "example": "4012345678"
                    },
                    "ean": {
                        "type": "string",
                        "description": "The EAN number associated with this product.",
                        "example": "9789076174082"
                    },
                    "title": {
                        "type": "string",
                        "description": "The product title.",
                        "example": "Harry Potter en de steen der wijzen"
                    },
                    "expectedQuantity": {
                        "type": "integer",
                        "description": "The quantity that is expected to be returned by the customer. Note: this can be greater than 1 in case the customer ordered a quantity greater than 1 of the same product in the same customer order.",
                        "format": "int32",
                        "example": 1
                    },
                    "returnReason": {
                        "$ref": "#/components/schemas/ReturnReason"
                    },
                    "trackAndTrace": {
                        "type": "string",
                        "description": "The track and trace code that is associated with this transport.",
                        "example": "3SBOL0987654321"
                    },
                    "transporterName": {
                        "type": "string",
                        "description": "The name of the transporter.",
                        "example": "PostNL"
                    },
                    "handled": {
                        "type": "boolean",
                        "description": "Indicates if this return item has been handled (by the retailer).",
                        "example": true
                    },
                    "processingResults": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReturnProcessingResult"
                        }
                    },
                    "customerDetails": {
                        "$ref": "#/components/schemas/CustomerDetails"
                    }
                }
            },
            "RetailerInformationResponse": {
                "required": [
                    "companyName",
                    "displayName",
                    "kvkNumber",
                    "registrationDate",
                    "retailerId",
                    "vatNumber"
                ],
                "type": "object",
                "properties": {
                    "retailerId": {
                        "type": "string",
                        "description": "The Id of the retailer which information belongs to.",
                        "example": "1055479"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The name of the retailer visible on bol.com",
                        "example": "RETAILER123"
                    },
                    "companyName": {
                        "type": "string",
                        "description": "The company name of the retailer.",
                        "example": "Fietsentuin"
                    },
                    "vatNumber": {
                        "type": "string",
                        "description": "The VAT number of the retailer.",
                        "example": "NL123456789B01"
                    },
                    "kvkNumber": {
                        "type": "string",
                        "description": "The KVK number of the retailer.",
                        "example": "90005414"
                    },
                    "registrationDate": {
                        "type": "string",
                        "description": "A date representing the registration date for the retailer within bol.com",
                        "example": "2015-06-17"
                    },
                    "topRetailer": {
                        "type": "boolean",
                        "description": "Indication of retailer's being the top seller.",
                        "example": false
                    },
                    "ratingMethod": {
                        "type": "string",
                        "description": "An identifier that identifies if the rating is calculated over the past three months or on all reviews for the retailer.",
                        "example": "THREE_MONTHS",
                        "enum": [
                            "ALL_REVIEWS",
                            "THREE_MONTHS"
                        ]
                    },
                    "retailerRating": {
                        "$ref": "#/components/schemas/RetailerRating"
                    },
                    "retailerReview": {
                        "$ref": "#/components/schemas/RetailerReview"
                    }
                }
            },
            "RetailerRating": {
                "required": [
                    "retailerRating"
                ],
                "type": "object",
                "properties": {
                    "retailerRating": {
                        "maximum": 10,
                        "minimum": 1,
                        "type": "number",
                        "description": "General rating of the retailer.",
                        "format": "double",
                        "example": 9.1
                    },
                    "productInformationRating": {
                        "maximum": 10,
                        "minimum": 1,
                        "type": "number",
                        "description": "Product rating of the retailer.",
                        "format": "double",
                        "example": 9.6
                    },
                    "deliveryTimeRating": {
                        "maximum": 10,
                        "minimum": 1,
                        "type": "number",
                        "description": "Delivery rating of the retailer.",
                        "format": "double",
                        "example": 9.4
                    },
                    "shippingRating": {
                        "maximum": 10,
                        "minimum": 1,
                        "type": "number",
                        "description": "Shipping rating of the retailer.",
                        "format": "double",
                        "example": 9.4
                    },
                    "serviceRating": {
                        "maximum": 10,
                        "minimum": 1,
                        "type": "number",
                        "description": "Service rating of the retailer.",
                        "format": "double",
                        "example": 9.4
                    }
                },
                "description": "Rating on different aspects all being one decimal precision."
            },
            "RetailerReview": {
                "required": [
                    "negativeReviewCount",
                    "neutralReviewCount",
                    "positiveReviewCount",
                    "totalReviewCount"
                ],
                "type": "object",
                "properties": {
                    "totalReviewCount": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "The total amount of customer review during that rating method period.",
                        "format": "int32",
                        "example": 14
                    },
                    "approvalPercentage": {
                        "maximum": 10,
                        "minimum": 0,
                        "type": "integer",
                        "description": "The percentage of the amount of customer that rated the retailer either neutral or positive during the rating method period.",
                        "format": "int32",
                        "example": 100
                    },
                    "positiveReviewCount": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "The amount of positive customer reviews during that rating method period.",
                        "format": "int32",
                        "example": 13
                    },
                    "neutralReviewCount": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "The amount of neutral customer reviews during that rating method period.",
                        "format": "int32",
                        "example": 1
                    },
                    "negativeReviewCount": {
                        "minimum": 0,
                        "type": "integer",
                        "description": "The amount of negative customer reviews during that rating method period.",
                        "format": "int32",
                        "example": 0
                    }
                }
            },
            "ReducedInvalidReplenishmentLine": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of invalid replenishment line, in case the BSKU and/or EAN cannot be determined for this replenishment line.",
                        "example": "UNKNOWN_FBB_PRODUCT",
                        "enum": [
                            "UNKNOWN_FBB_PRODUCT",
                            "UNKNOWN_EAN_INVENTORY_RELATION"
                        ]
                    }
                }
            },
            "ReducedReplenishment": {
                "required": [
                    "creationDateTime",
                    "invalidLines",
                    "lines",
                    "reference",
                    "replenishmentId"
                ],
                "type": "object",
                "properties": {
                    "replenishmentId": {
                        "type": "string",
                        "description": "The unique identifier of the replenishment.",
                        "example": "2312078154"
                    },
                    "reference": {
                        "type": "string",
                        "description": "Custom user defined reference to identify the replenishment.",
                        "example": "REFERENCE1"
                    },
                    "creationDateTime": {
                        "type": "string",
                        "description": "The date and time when this replenishment was created. In ISO 8601 format.",
                        "format": "date-time",
                        "example": "2020-09-09T16:44:03+02:00"
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReducedReplenishmentLines"
                        }
                    },
                    "invalidLines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReducedInvalidReplenishmentLine"
                        }
                    }
                }
            },
            "ReducedReplenishmentLines": {
                "required": [
                    "ean"
                ],
                "type": "object",
                "properties": {
                    "ean": {
                        "type": "string",
                        "description": "The EAN number associated with this product.",
                        "example": "0000007740404"
                    }
                }
            },
            "ReplenishmentsResponse": {
                "required": [
                    "replenishments"
                ],
                "type": "object",
                "properties": {
                    "replenishments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReducedReplenishment"
                        }
                    }
                }
            },
            "Address": {
                "required": [
                    "attentionOf",
                    "city",
                    "countryCode",
                    "houseNumber",
                    "houseNumberExtension",
                    "streetName",
                    "zipCode"
                ],
                "type": "object",
                "properties": {
                    "streetName": {
                        "type": "string",
                        "description": "The street name of the pickup location.",
                        "example": "Dorpstraat"
                    },
                    "houseNumber": {
                        "type": "string",
                        "description": "The house number of the pickup location.",
                        "example": "1"
                    },
                    "houseNumberExtension": {
                        "type": "string",
                        "description": "The extension of the house number of the pickup location.",
                        "example": "B"
                    },
                    "zipCode": {
                        "type": "string",
                        "description": "The zip code in '1234AB' format for NL and '0000' for BE addresses.",
                        "example": "1111ZZ"
                    },
                    "city": {
                        "type": "string",
                        "description": "The city of the pickup address.",
                        "example": "Utrecht"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "The ISO 3166-2 country code.",
                        "example": "NL"
                    },
                    "attentionOf": {
                        "type": "string",
                        "description": "Name of the person responsible for this replenishment.",
                        "example": "Jan Jansen"
                    }
                }
            },
            "DeliveryInformation": {
                "required": [
                    "destinationWarehouse",
                    "expectedDeliveryDate",
                    "transporterCode"
                ],
                "type": "object",
                "properties": {
                    "expectedDeliveryDate": {
                        "type": "string",
                        "description": "The expected delivery date of the shipment at the bol.com warehouse in ISO 8601 format.",
                        "format": "date",
                        "example": "2021-01-02"
                    },
                    "transporterCode": {
                        "type": "string",
                        "description": "The transporter that will pickup this replenishment.",
                        "example": "POSTNL",
                        "enum": [
                            "POSTNL",
                            "DHL",
                            "DPD",
                            "GLS",
                            "UPS",
                            "OTHER"
                        ]
                    },
                    "destinationWarehouse": {
                        "$ref": "#/components/schemas/DestinationWarehouse"
                    }
                }
            },
            "DestinationWarehouse": {
                "required": [
                    "attentionOf",
                    "city",
                    "countryCode",
                    "houseNumber",
                    "houseNumberExtension",
                    "streetName",
                    "zipCode"
                ],
                "type": "object",
                "properties": {
                    "streetName": {
                        "type": "string",
                        "description": "The street name of the pickup address.",
                        "example": "Industrieweg"
                    },
                    "houseNumber": {
                        "type": "string",
                        "description": "The house number of the pickup address.",
                        "example": "1"
                    },
                    "houseNumberExtension": {
                        "type": "string",
                        "description": "The extension of the house number.",
                        "example": "B"
                    },
                    "zipCode": {
                        "type": "string",
                        "description": "The zip code in '1234AB' format for NL and '0000' for BE addresses.",
                        "example": "1111ZZ"
                    },
                    "city": {
                        "type": "string",
                        "description": "The city of the pickup address.",
                        "example": "Waalwijk"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "The ISO 3166-2 country code.",
                        "example": "NL"
                    },
                    "attentionOf": {
                        "type": "string",
                        "description": "Name of the person responsible for this replenishment.",
                        "example": "t.a.v. bol.com"
                    }
                }
            },
            "InvalidReplenishmentLine": {
                "required": [
                    "quantityAnnounced",
                    "quantityInProgress",
                    "quantityReceived",
                    "quantityWithGradedState",
                    "quantityWithRegularState",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Type of invalid replenishment line, in case the BSKU and/or EAN cannot be determined for this replenishment line.",
                        "example": "UNKNOWN_FBB_PRODUCT",
                        "enum": [
                            "UNKNOWN_FBB_PRODUCT",
                            "UNKNOWN_EAN_INVENTORY_RELATION"
                        ]
                    },
                    "quantityAnnounced": {
                        "type": "integer",
                        "description": "The amount of announced quantity for this replenishment line.",
                        "format": "int32",
                        "example": 1
                    },
                    "quantityReceived": {
                        "type": "integer",
                        "description": "The amount of received quantity for this replenishment line.",
                        "format": "int32",
                        "example": 0
                    },
                    "quantityInProgress": {
                        "type": "integer",
                        "description": "The amount of quantity that is still in progress at the warehouse for this replenishment line.",
                        "format": "int32",
                        "example": 0
                    },
                    "quantityWithGradedState": {
                        "type": "integer",
                        "description": "The quantity within this shipment line that has a graded (unsalable) state.",
                        "format": "int32",
                        "example": 0
                    },
                    "quantityWithRegularState": {
                        "type": "integer",
                        "description": "The quantity within this shipment line that has a regular (salable) state.",
                        "format": "int32",
                        "example": 0
                    }
                }
            },
            "LoadCarrier": {
                "required": [
                    "transportState",
                    "transportStateUpdateDateTime"
                ],
                "type": "object",
                "properties": {
                    "sscc": {
                        "type": "string",
                        "description": "The Serial Shipping Container Code (SSCC) for this load carrier.",
                        "example": "020001200000007000"
                    },
                    "transportLabelTrackAndTrace": {
                        "type": "string",
                        "description": "The track and trace code for this load carrier.",
                        "example": "3SJTXX216692157"
                    },
                    "transportState": {
                        "type": "string",
                        "description": "The current state of the transport for this load carrier.",
                        "example": "ANNOUNCED",
                        "enum": [
                            "ANNOUNCED",
                            "PICKED_UP",
                            "UNDERWAY",
                            "DELAYED",
                            "ARRIVED",
                            "ERROR"
                        ]
                    },
                    "transportStateUpdateDateTime": {
                        "type": "string",
                        "description": "The date and time in ISO 8601 format when the latest update for this transport was received.",
                        "format": "date-time",
                        "example": "2021-01-02T09:00:00+01:00"
                    }
                }
            },
            "PickupAppointment": {
                "required": [
                    "address",
                    "pickupTimeSlot"
                ],
                "type": "object",
                "properties": {
                    "commentToTransporter": {
                        "type": "string",
                        "description": "A comment to the transporter regarding the pickup appointment.",
                        "example": "Eerste verdieping."
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "pickupTimeSlot": {
                        "$ref": "#/components/schemas/ReplenishmentPickupTimeSlot"
                    },
                    "pickupDateTime": {
                        "type": "string",
                        "description": "The date and time in ISO 8601 format when this replenishment was picked up by the transporter.",
                        "format": "date-time",
                        "example": "2021-01-01T09:00:00+01:00"
                    },
                    "cancellationReason": {
                        "type": "string",
                        "description": "In case of a pickup cancellation this field indicates the reason for cancelling this pickup.",
                        "example": "NOT_AT_HOME",
                        "enum": [
                            "UNKNOWN_ADDRESS",
                            "NOT_READY",
                            "NO_LABEL",
                            "WRONG_PACKAGE",
                            "NOT_AT_HOME",
                            "OTHER_REASON",
                            "REQUEST_FROM_RETAILER"
                        ]
                    }
                }
            },
            "ReplenishmentLine": {
                "required": [
                    "ean",
                    "lineState",
                    "quantityAnnounced",
                    "quantityInProgress",
                    "quantityReceived",
                    "quantityWithGradedState",
                    "quantityWithRegularState"
                ],
                "type": "object",
                "properties": {
                    "ean": {
                        "type": "string",
                        "description": "The EAN number associated with this product.",
                        "example": "0000007740404"
                    },
                    "lineState": {
                        "type": "string",
                        "description": "The state of the line indicating whether this line was announced within this replenishment.",
                        "example": "ANNOUNCED",
                        "enum": [
                            "ANNOUNCED",
                            "UNANNOUNCED",
                            "UNKNOWN"
                        ]
                    },
                    "quantityAnnounced": {
                        "type": "integer",
                        "description": "The amount of announced quantity for this replenishment line.",
                        "format": "int32",
                        "example": 1
                    },
                    "quantityReceived": {
                        "type": "integer",
                        "description": "The amount of received quantity for this replenishment line.",
                        "format": "int32",
                        "example": 0
                    },
                    "quantityInProgress": {
                        "type": "integer",
                        "description": "The amount of quantity that is still in progress at the warehouse for this replenishment line.",
                        "format": "int32",
                        "example": 0
                    },
                    "quantityWithGradedState": {
                        "type": "integer",
                        "description": "The quantity within this shipment line that has a graded (unsalable) state.",
                        "format": "int32",
                        "example": 0
                    },
                    "quantityWithRegularState": {
                        "type": "integer",
                        "description": "The quantity within this shipment line that has a regular (salable) state.",
                        "format": "int32",
                        "example": 0
                    }
                }
            },
            "ReplenishmentPickupTimeSlot": {
                "required": [
                    "fromDateTime",
                    "untilDateTime"
                ],
                "type": "object",
                "properties": {
                    "fromDateTime": {
                        "type": "string",
                        "description": "The selected start date and time for the replenishment pickup appointment. In ISO 8601 format.",
                        "format": "date-time",
                        "example": "2021-01-01T09:00:00+01:00"
                    },
                    "untilDateTime": {
                        "type": "string",
                        "description": "The selected end date and time for the replenishment pickup appointment. In ISO 8601 format.",
                        "format": "date-time",
                        "example": "2021-01-01T10:00:00+01:00"
                    }
                }
            },
            "ReplenishmentResponse": {
                "required": [
                    "creationDateTime",
                    "deliveryInformation",
                    "invalidLines",
                    "labelingByBol",
                    "lines",
                    "loadCarriers",
                    "reference",
                    "replenishmentId",
                    "state",
                    "stateTransitions"
                ],
                "type": "object",
                "properties": {
                    "replenishmentId": {
                        "type": "string",
                        "description": "The unique identifier of the replenishment.",
                        "example": "2312078154"
                    },
                    "creationDateTime": {
                        "type": "string",
                        "description": "The date and time when this replenishment was created. In ISO 8601 format.",
                        "format": "date-time",
                        "example": "2021-01-01T08:00:00+01:00"
                    },
                    "reference": {
                        "type": "string",
                        "description": "Custom user defined reference to identify the replenishment.",
                        "example": "REFERENCE1"
                    },
                    "labelingByBol": {
                        "type": "boolean",
                        "description": "Indicates whether the replenishment will be labeled by bol.com or not.",
                        "example": false
                    },
                    "state": {
                        "type": "string",
                        "description": "Indicates the state of this replenishment order.",
                        "example": "ANNOUNCED",
                        "enum": [
                            "ANNOUNCED",
                            "IN_TRANSIT",
                            "ARRIVED_AT_WH",
                            "IN_PROGRESS_AT_WH",
                            "CANCELLED",
                            "DONE"
                        ]
                    },
                    "deliveryInformation": {
                        "$ref": "#/components/schemas/DeliveryInformation"
                    },
                    "pickupAppointment": {
                        "$ref": "#/components/schemas/PickupAppointment"
                    },
                    "numberOfLoadCarriers": {
                        "type": "integer",
                        "description": "The number of load carriers in this shipment.",
                        "format": "int32",
                        "example": 1
                    },
                    "loadCarriers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LoadCarrier"
                        }
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReplenishmentLine"
                        }
                    },
                    "invalidLines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvalidReplenishmentLine"
                        }
                    },
                    "stateTransitions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StateTransition"
                        }
                    }
                }
            },
            "StateTransition": {
                "required": [
                    "state",
                    "stateDateTime"
                ],
                "type": "object",
                "properties": {
                    "state": {
                        "type": "string",
                        "description": "Indicates the state of this replenishment order.",
                        "example": "ANNOUNCED",
                        "enum": [
                            "DRAFT",
                            "ANNOUNCED",
                            "IN_TRANSIT",
                            "ARRIVED_AT_WH",
                            "IN_PROGRESS_AT_WH",
                            "CANCELLED",
                            "DONE"
                        ]
                    },
                    "stateDateTime": {
                        "type": "string",
                        "description": "The date and time in ISO 8601 format that indicates when this states was updated for this replenishment.",
                        "format": "date-time",
                        "example": "2021-01-02T09:00:00+01:00"
                    }
                }
            },
            "ProductDestination": {
                "required": [
                    "destinationWarehouse",
                    "eans"
                ],
                "type": "object",
                "properties": {
                    "destinationWarehouse": {
                        "$ref": "#/components/schemas/ProductDestinationWarehouse"
                    },
                    "eans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Ean"
                        }
                    }
                }
            },
            "ProductDestinationAddress": {
                "required": [
                    "attentionOf",
                    "city",
                    "countryCode",
                    "houseNumber",
                    "streetName",
                    "zipCode"
                ],
                "type": "object",
                "properties": {
                    "streetName": {
                        "type": "string",
                        "description": "The street name of the bol.com warehouse address.",
                        "example": "Industrieweg"
                    },
                    "houseNumber": {
                        "type": "integer",
                        "description": "The house number of the bol.com warehouse address.",
                        "format": "int32",
                        "example": 1
                    },
                    "zipCode": {
                        "type": "string",
                        "description": "The zipcode of the bol.com warehouse address.",
                        "example": "1111ZZ"
                    },
                    "city": {
                        "type": "string",
                        "description": "The city of the bol.com warehouse address.",
                        "example": "Waalwijk"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "The ISO 3166-2 country code of the bol.com warehouse address.",
                        "example": "NL"
                    },
                    "attentionOf": {
                        "type": "string",
                        "description": "Name of the person responsible for this replenishment.",
                        "example": "t.a.v. bol.com"
                    },
                    "houseNumberExtension": {
                        "type": "string",
                        "description": "The house number extension of the bol.com warehouse address.",
                        "example": "B"
                    }
                }
            },
            "ProductDestinationWarehouse": {
                "required": [
                    "address"
                ],
                "type": "object",
                "properties": {
                    "address": {
                        "$ref": "#/components/schemas/ProductDestinationAddress"
                    }
                }
            },
            "ProductDestinationsResponse": {
                "required": [
                    "productDestinations"
                ],
                "type": "object",
                "properties": {
                    "productDestinations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductDestination"
                        }
                    }
                }
            },
            "DeliveryDatesResponse": {
                "required": [
                    "deliveryDates"
                ],
                "type": "object",
                "properties": {
                    "deliveryDates": {
                        "type": "array",
                        "description": "Allowed delivery dates for shipments to the bol.com warehouse in ISO 8601 format.",
                        "example": "2021-01-02",
                        "items": {
                            "type": "string",
                            "description": "Allowed delivery dates for shipments to the bol.com warehouse in ISO 8601 format.",
                            "example": "2021-01-02"
                        }
                    }
                }
            },
            "Campaign": {
                "required": [
                    "name",
                    "startDateTime"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the campaign under which the promotion had been created.",
                        "example": "Campaign name"
                    },
                    "startDateTime": {
                        "type": "string",
                        "description": "The starting date and time of the campaign.",
                        "format": "date-time",
                        "example": "2021-03-29T00:00:00+02:00"
                    },
                    "endDateTime": {
                        "type": "string",
                        "description": "The ending date and time of the campaign.",
                        "format": "date-time",
                        "example": "2021-05-10T00:00:00+02:00"
                    }
                }
            },
            "PromotionCountryCode": {
                "required": [
                    "countryCode"
                ],
                "type": "object",
                "properties": {
                    "countryCode": {
                        "type": "string",
                        "description": "The country code of the country in which the promotion is active.",
                        "example": "NL",
                        "enum": [
                            "NL",
                            "BE"
                        ]
                    }
                }
            },
            "Promotions": {
                "type": "object",
                "properties": {
                    "promotions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReducedPromotion"
                        }
                    }
                },
                "description": "Container for multiple promotions."
            },
            "ReducedPromotion": {
                "required": [
                    "countries",
                    "endDateTime",
                    "promotionId",
                    "promotionType",
                    "retailerSpecificPromotion",
                    "startDateTime",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "promotionId": {
                        "type": "string",
                        "description": "The identifier of the promotion.",
                        "example": "1234"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the promotion.",
                        "example": "Promotion title"
                    },
                    "startDateTime": {
                        "type": "string",
                        "description": "The starting date and time of the promotion.",
                        "format": "date-time",
                        "example": "2021-03-29T00:00:00+02:00"
                    },
                    "endDateTime": {
                        "type": "string",
                        "description": "The ending date and time of the promotion.",
                        "format": "date-time",
                        "example": "2021-05-10T00:00:00+02:00"
                    },
                    "countries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PromotionCountryCode"
                        }
                    },
                    "promotionType": {
                        "type": "string",
                        "description": "The type of the promotion.",
                        "example": "AWARENESS",
                        "enum": [
                            "AWARENESS",
                            "PRICE_OFF"
                        ]
                    },
                    "retailerSpecificPromotion": {
                        "type": "boolean",
                        "description": "Indicates whether the promotion is retailer specific or open to the platform.",
                        "example": false
                    },
                    "campaign": {
                        "$ref": "#/components/schemas/Campaign"
                    }
                },
                "description": "A single promotion."
            },
            "Promotion": {
                "required": [
                    "countries",
                    "endDateTime",
                    "promotionId",
                    "promotionType",
                    "retailerSpecificPromotion",
                    "startDateTime",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "promotionId": {
                        "type": "string",
                        "description": "The identifier of the promotion.",
                        "example": "1234"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the promotion.",
                        "example": "Promotion title"
                    },
                    "startDateTime": {
                        "type": "string",
                        "description": "The starting date and time of the promotion.",
                        "format": "date-time",
                        "example": "2021-03-29T00:00:00+02:00"
                    },
                    "endDateTime": {
                        "type": "string",
                        "description": "The ending date and time of the promotion.",
                        "format": "date-time",
                        "example": "2021-05-10T00:00:00+02:00"
                    },
                    "countries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PromotionCountryCode"
                        }
                    },
                    "promotionType": {
                        "type": "string",
                        "description": "The type of the promotion.",
                        "example": "AWARENESS",
                        "enum": [
                            "AWARENESS",
                            "PRICE_OFF"
                        ]
                    },
                    "retailerSpecificPromotion": {
                        "type": "boolean",
                        "description": "Indicates whether the promotion is retailer specific or open to the platform.",
                        "example": false
                    },
                    "campaign": {
                        "$ref": "#/components/schemas/Campaign"
                    }
                },
                "description": "A single promotion."
            },
            "Product": {
                "required": [
                    "ean"
                ],
                "type": "object",
                "properties": {
                    "ean": {
                        "type": "string",
                        "description": "The EAN number associated with this product.",
                        "example": "0000007740404"
                    },
                    "relevanceScores": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RelevanceScore"
                        }
                    },
                    "maximumPrice": {
                        "type": "number",
                        "description": "The maximum price a product can have in order to be part of the promotion.",
                        "example": 21.5
                    }
                },
                "description": "A single product."
            },
            "Products": {
                "required": [
                    "products"
                ],
                "type": "object",
                "properties": {
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Product"
                        }
                    }
                },
                "description": "Container for multiple products."
            },
            "RelevanceScore": {
                "type": "object",
                "properties": {
                    "countryCode": {
                        "type": "string",
                        "description": "The country for which the relevance score has been calculated against.",
                        "example": "NL",
                        "enum": [
                            "NL",
                            "BE"
                        ]
                    },
                    "relevanceScore": {
                        "type": "integer",
                        "description": "The calculated relevance score for the product.",
                        "format": "int32",
                        "example": 72,
                        "enum": [
                            null
                        ]
                    }
                },
                "description": "The relevance score of a product in a promotion."
            },
            "ProductRatingsRating": {
                "required": [
                    "rating"
                ],
                "type": "object",
                "properties": {
                    "rating": {
                        "type": "integer",
                        "description": "Scale of the rating provided by the customer.",
                        "format": "int32",
                        "example": 4
                    },
                    "count": {
                        "type": "integer",
                        "description": "The number of ratings for the corresponding scale.",
                        "format": "int32",
                        "example": 30
                    }
                }
            },
            "ProductRatingsResponse": {
                "required": [
                    "ratings"
                ],
                "type": "object",
                "properties": {
                    "ratings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductRatingsRating"
                        }
                    }
                }
            },
            "ProductIdsEan": {
                "required": [
                    "ean"
                ],
                "type": "object",
                "properties": {
                    "ean": {
                        "type": "string",
                        "description": "The EAN number associated with this product.",
                        "example": "0000007740404"
                    }
                }
            },
            "ProductIdsResponse": {
                "required": [
                    "bolProductId",
                    "eans"
                ],
                "type": "object",
                "properties": {
                    "bolProductId": {
                        "type": "string",
                        "description": "Identifier of the product. This id is specific to bol.com webshop.",
                        "example": "9200000045327288"
                    },
                    "eans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductIdsEan"
                        }
                    }
                }
            },
            "PriceStarBoundaries": {
                "required": [
                    "lastModifiedDateTime",
                    "priceStarBoundaryLevels"
                ],
                "type": "object",
                "properties": {
                    "lastModifiedDateTime": {
                        "type": "string",
                        "description": "The date and time in ISO 8601 format when boundaries updated for the last time.",
                        "format": "date-time",
                        "example": "2022-01-07T03:18:38.228164+01:00"
                    },
                    "priceStarBoundaryLevels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PriceStarBoundaryLevels"
                        }
                    }
                }
            },
            "PriceStarBoundaryLevels": {
                "required": [
                    "boundaryPrice",
                    "level"
                ],
                "type": "object",
                "properties": {
                    "level": {
                        "type": "integer",
                        "description": "The level of the price star boundary.",
                        "format": "int32",
                        "example": 5
                    },
                    "boundaryPrice": {
                        "type": "number",
                        "description": "The boundary price of the corresponding level.",
                        "example": 41
                    }
                }
            },
            "Category": {
                "required": [
                    "categoryId",
                    "categoryName"
                ],
                "type": "object",
                "properties": {
                    "categoryId": {
                        "type": "string",
                        "description": "The id of the parent category which the product belongs to.",
                        "example": "13155"
                    },
                    "categoryName": {
                        "type": "string",
                        "description": "The name of the parent category which the product belongs to.",
                        "example": "Klussen"
                    },
                    "subcategories": {
                        "type": "array",
                        "description": "The subcategories which the product belongs to.",
                        "items": {
                            "$ref": "#/components/schemas/SubCategory"
                        }
                    }
                }
            },
            "ProductPlacementResponse": {
                "required": [
                    "categories",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "The URL of the product on the webshop."
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Category"
                        }
                    }
                }
            },
            "SubCategory": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the subcategory which the product belongs to."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the subcategory which the product belongs to."
                    }
                },
                "description": "The subcategories which the product belongs to."
            },
            "CompetingOffersResponse": {
                "required": [
                    "offers"
                ],
                "type": "object",
                "properties": {
                    "offers": {
                        "type": "array",
                        "description": "List of offers.",
                        "items": {
                            "$ref": "#/components/schemas/Offer"
                        }
                    }
                }
            },
            "Offer": {
                "required": [
                    "bestOffer",
                    "countryCode",
                    "fulfilmentMethod",
                    "offerId",
                    "price",
                    "retailerId"
                ],
                "type": "object",
                "properties": {
                    "offerId": {
                        "type": "string",
                        "description": "Unique identifier for an offer.",
                        "example": "228b6d06-2067-4cef-8447-c21d0c233e61"
                    },
                    "retailerId": {
                        "type": "string",
                        "description": "The ID of the retailer which the offer belongs to.",
                        "example": "0"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "The country code.",
                        "example": "NL"
                    },
                    "bestOffer": {
                        "type": "boolean",
                        "description": "Indicator if the offer is the best offer within the country for the requested EAN.",
                        "example": true
                    },
                    "price": {
                        "type": "number",
                        "description": "The selling price to the customer of a single unit including VAT unless there is a discount. The price should always have two decimals precision.",
                        "example": 41.5
                    },
                    "fulfilmentMethod": {
                        "type": "string",
                        "description": "The fulfilment method. Fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).",
                        "example": "FBB"
                    },
                    "condition": {
                        "type": "string",
                        "description": "The condition of the offered product.",
                        "example": "NEW"
                    },
                    "ultimateOrderTime": {
                        "type": "string",
                        "description": "The time in ISO 8601 format when the ultimate order time on the day in order to comply to the maxDeliveryDate as a promise.",
                        "example": "23:59"
                    },
                    "minDeliveryDate": {
                        "type": "string",
                        "description": "The date at which package can be delivered to customer earliest.",
                        "format": "date",
                        "example": "2022-10-20"
                    },
                    "maxDeliveryDate": {
                        "type": "string",
                        "description": "The date at which package can be delivered to customer latest. In case of pre-orders where a specific delivery date is not available, this field will not be present.",
                        "format": "date",
                        "example": "2022-10-21"
                    }
                },
                "description": "List of offers."
            },
            "ProductAssets": {
                "required": [
                    "order",
                    "usage",
                    "variants"
                ],
                "type": "object",
                "properties": {
                    "usage": {
                        "type": "string",
                        "description": "Type of the asset being used for.",
                        "example": "ADDITIONAL",
                        "enum": [
                            "PRIMARY",
                            "ADDITIONAL",
                            "IMAGE"
                        ]
                    },
                    "order": {
                        "type": "integer",
                        "description": "The intended order of the product images.",
                        "format": "int32",
                        "example": 0
                    },
                    "variants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductAssetsVariants"
                        }
                    }
                }
            },
            "ProductAssetsResponse": {
                "required": [
                    "assets"
                ],
                "type": "object",
                "properties": {
                    "assets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductAssets"
                        }
                    }
                }
            },
            "ProductAssetsVariants": {
                "required": [
                    "height",
                    "mimeType",
                    "size",
                    "url",
                    "width"
                ],
                "type": "object",
                "properties": {
                    "size": {
                        "type": "string",
                        "description": "The name of the size of the asset, if the asset is an image.",
                        "example": "small",
                        "enum": [
                            "small",
                            "medium"
                        ]
                    },
                    "width": {
                        "type": "integer",
                        "description": "The width of the asset in pixels.",
                        "format": "int32",
                        "example": 250
                    },
                    "height": {
                        "type": "integer",
                        "description": "The height of the asset in pixels.",
                        "format": "int32",
                        "example": 200
                    },
                    "mimeType": {
                        "type": "string",
                        "description": "The mime type of the asset.",
                        "example": "image/jpeg",
                        "enum": [
                            "image/jpeg",
                            "application/pdf",
                            "application/x-mpegurl",
                            "video/mp4"
                        ]
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the attribute."
                    }
                }
            },
            "ProductListFiltersRequest": {
                "type": "object",
                "properties": {
                    "search-term": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "category-id": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "search": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    }
                }
            },
            "Categories": {
                "required": [
                    "categoryName",
                    "categoryValues"
                ],
                "type": "object",
                "properties": {
                    "categoryName": {
                        "type": "string",
                        "description": "The name of the categories.",
                        "example": "Categorieën"
                    },
                    "categoryValues": {
                        "type": "array",
                        "description": "The list of available categories.",
                        "items": {
                            "$ref": "#/components/schemas/CategoryValues"
                        }
                    }
                },
                "description": "The list of categories that are available to further narrow down search results, for the given search term and category."
            },
            "CategoryValues": {
                "type": "object",
                "properties": {
                    "categoryValueId": {
                        "type": "string",
                        "description": "The id of the category. This id can be used in other endpoints, like Get product list.",
                        "example": "7934"
                    },
                    "categoryValueName": {
                        "type": "string",
                        "description": "The name of the category.",
                        "example": "Speelgoed"
                    }
                },
                "description": "The list of available categories."
            },
            "FilterRanges": {
                "required": [
                    "max",
                    "min",
                    "rangeId",
                    "rangeName",
                    "unit"
                ],
                "type": "object",
                "properties": {
                    "rangeId": {
                        "type": "string",
                        "description": "The id of the range filter product can be found under.",
                        "example": "PRICE"
                    },
                    "rangeName": {
                        "type": "string",
                        "description": "The name of the range filter product can be found under.",
                        "example": "Prijs"
                    },
                    "min": {
                        "type": "number",
                        "description": "The minimum value for the range that can be used to filter results.",
                        "example": 0.99
                    },
                    "max": {
                        "type": "number",
                        "description": "The maximum value for the range that can be used to filter results.",
                        "example": 4599
                    },
                    "unit": {
                        "type": "string",
                        "description": "The unit that applies to the min and max range values.",
                        "example": "EUR"
                    }
                },
                "description": "The list of range filters that is associated with the given search term or category."
            },
            "FilterValues": {
                "required": [
                    "filterValueId"
                ],
                "type": "object",
                "properties": {
                    "filterValueId": {
                        "type": "string",
                        "description": "The unique identifier of the filter value.",
                        "example": "4279587082"
                    },
                    "filterValueName": {
                        "type": "string",
                        "description": "The name of the filter value.",
                        "example": "LEGO Star Wars"
                    }
                },
                "description": "The list of filter values in this filter."
            },
            "Filters": {
                "required": [
                    "filterName",
                    "filterValues"
                ],
                "type": "object",
                "properties": {
                    "filterName": {
                        "type": "string",
                        "description": "The name of the filter.",
                        "example": "Serie"
                    },
                    "filterValues": {
                        "type": "array",
                        "description": "The list of filter values in this filter.",
                        "items": {
                            "$ref": "#/components/schemas/FilterValues"
                        }
                    }
                },
                "description": "The list of filters that is associated with the given search term or category."
            },
            "ProductListFiltersResponse": {
                "required": [
                    "categoryData",
                    "filterRanges",
                    "filters"
                ],
                "type": "object",
                "properties": {
                    "categoryData": {
                        "$ref": "#/components/schemas/Categories"
                    },
                    "filterRanges": {
                        "type": "array",
                        "description": "The list of range filters that is associated with the given search term or category.",
                        "items": {
                            "$ref": "#/components/schemas/FilterRanges"
                        }
                    },
                    "filters": {
                        "type": "array",
                        "description": "The list of filters that is associated with the given search term or category.",
                        "items": {
                            "$ref": "#/components/schemas/Filters"
                        }
                    }
                }
            },
            "ProductCategoriesResponse": {
                "required": [
                    "categories"
                ],
                "type": "object",
                "properties": {
                    "categories": {
                        "type": "array",
                        "description": "A list of product categories and its children.",
                        "items": {
                            "$ref": "#/components/schemas/ProductCategory"
                        }
                    }
                }
            },
            "ProductCategory": {
                "required": [
                    "categoryId",
                    "categoryName"
                ],
                "type": "object",
                "properties": {
                    "categoryId": {
                        "type": "string",
                        "description": "The id of the category.",
                        "example": "43646"
                    },
                    "categoryName": {
                        "type": "string",
                        "description": "The name of the category.",
                        "example": "Auto & Motor"
                    },
                    "order": {
                        "type": "integer",
                        "description": "The order of the category in the tree.",
                        "format": "int32",
                        "example": 1
                    },
                    "subcategories": {
                        "type": "array",
                        "description": "A list of product subcategories and its children.",
                        "items": {
                            "$ref": "#/components/schemas/ProductCategory"
                        }
                    }
                },
                "description": "A list of product categories and its children."
            },
            "ReducedOrder": {
                "required": [
                    "orderId",
                    "orderItems",
                    "orderPlacedDateTime"
                ],
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "string",
                        "description": "The identifier of the order.",
                        "example": "A2K8290LP8"
                    },
                    "orderPlacedDateTime": {
                        "type": "string",
                        "description": "The date and time in ISO 8601 format when the order was placed.",
                        "format": "date-time",
                        "example": "2017-02-09T12:39:48+01:00"
                    },
                    "orderItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReducedOrderItem"
                        }
                    }
                },
                "description": "An order."
            },
            "ReducedOrderItem": {
                "required": [
                    "cancellationRequest",
                    "ean",
                    "fulfilmentMethod",
                    "fulfilmentStatus",
                    "latestChangedDateTime",
                    "orderItemId",
                    "quantity",
                    "quantityCancelled",
                    "quantityShipped"
                ],
                "type": "object",
                "properties": {
                    "orderItemId": {
                        "type": "string",
                        "description": "The id for the order item. One order can have multiple order items, but the list can only take one item.",
                        "example": "2012345678"
                    },
                    "ean": {
                        "type": "string",
                        "description": "The EAN number associated with this product.",
                        "example": "0000007740404"
                    },
                    "fulfilmentMethod": {
                        "type": "string",
                        "description": "The fulfilment method. Fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).",
                        "example": "FBR",
                        "enum": [
                            "FBR",
                            "FBB"
                        ]
                    },
                    "fulfilmentStatus": {
                        "type": "string",
                        "description": "This field indicates the processing state of an order. It can have two values: \"OPEN,\" which corresponds to active order items excluding those that have been shipped or cancelled, and \"HANDLED,\" which means the order item has either been shipped or cancelled.",
                        "example": "OPEN",
                        "enum": [
                            "OPEN",
                            "HANDLED"
                        ]
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Amount of ordered products for this order item id.",
                        "format": "int32",
                        "example": 10
                    },
                    "quantityShipped": {
                        "type": "integer",
                        "description": "Amount of shipped products for this order item id.",
                        "format": "int32",
                        "example": 10
                    },
                    "quantityCancelled": {
                        "type": "integer",
                        "description": "Amount of cancelled products for this order item id.",
                        "format": "int32",
                        "example": 0
                    },
                    "cancellationRequest": {
                        "type": "boolean",
                        "description": "Indicates whether the order was cancelled on request of the customer before the retailer has shipped it.",
                        "example": false
                    },
                    "latestChangedDateTime": {
                        "type": "string",
                        "description": "The date and time in ISO 8601 format when the orderItem was last changed.",
                        "format": "date-time",
                        "example": "2017-02-09T12:39:48+01:00"
                    }
                },
                "description": "An order item."
            },
            "ReducedOrders": {
                "required": [
                    "orders"
                ],
                "type": "object",
                "properties": {
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReducedOrder"
                        }
                    }
                },
                "description": "Container for many orders."
            },
            "AdditionalService": {
                "required": [
                    "serviceType"
                ],
                "type": "object",
                "properties": {
                    "serviceType": {
                        "type": "string",
                        "description": "An additional service type that the customer selected when purchasing this order item.",
                        "example": "PLACEMENT_AND_INSTALLATION"
                    }
                }
            },
            "Discount": {
                "required": [
                    "amount",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "The title of the promotion.",
                        "example": "kiscier x + y promotion"
                    },
                    "amount": {
                        "type": "number",
                        "description": "The discount price applied, including VAT.",
                        "example": 10.99
                    }
                }
            },
            "Order": {
                "required": [
                    "orderId",
                    "orderItems",
                    "pickupPoint",
                    "shipmentDetails"
                ],
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "string",
                        "description": "The identifier of the order.",
                        "example": "A2K8290LP8"
                    },
                    "pickupPoint": {
                        "type": "boolean",
                        "description": "Indicates whether this order is shipped to a Pick Up Point.",
                        "example": true
                    },
                    "orderPlacedDateTime": {
                        "type": "string",
                        "description": "The date and time in ISO 8601 format when the order was placed.",
                        "format": "date-time",
                        "example": "2017-02-09T12:39:48+01:00"
                    },
                    "shipmentDetails": {
                        "$ref": "#/components/schemas/ShipmentDetails"
                    },
                    "billingDetails": {
                        "$ref": "#/components/schemas/BillingDetails"
                    },
                    "orderItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderOrderItem"
                        }
                    }
                },
                "description": "An order."
            },
            "OrderFulfilment": {
                "required": [
                    "method",
                    "timeFrameType"
                ],
                "type": "object",
                "properties": {
                    "method": {
                        "type": "string",
                        "description": "The fulfilment method. Fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB).",
                        "example": "FBR"
                    },
                    "distributionParty": {
                        "type": "string",
                        "description": "The party that manages the distribution, either bol.com or the retailer itself.",
                        "example": "RETAILER",
                        "enum": [
                            "RETAILER",
                            "BOL"
                        ]
                    },
                    "latestDeliveryDate": {
                        "type": "string",
                        "description": "The ultimate delivery date at which this order must be delivered at the customer's shipping address. This field is empty in case the exactDeliveryDate is filled.",
                        "format": "date",
                        "example": "2017-02-10"
                    },
                    "exactDeliveryDate": {
                        "type": "string",
                        "description": "The exact delivery date at which this order must be delivered at the customer's shipping address. This field is only filled when the customer chose an exact date for delivery. This field is empty in case the latestDeliveryDate is filled.",
                        "format": "date",
                        "example": "2017-02-13"
                    },
                    "expiryDate": {
                        "type": "string",
                        "description": "The date this order item will automatically expire and thereby cancelling this order item from the order.",
                        "format": "date",
                        "example": "2017-02-13"
                    },
                    "timeFrameType": {
                        "type": "string",
                        "description": "Delivery option selected by the customer.",
                        "example": "REGULAR",
                        "enum": [
                            "REGULAR",
                            "EVENING",
                            "APPOINTMENT",
                            "SAMEDAY",
                            "SUNDAY"
                        ]
                    }
                }
            },
            "OrderOrderItem": {
                "required": [
                    "cancellationRequest",
                    "commission",
                    "discounts",
                    "latestChangedDateTime",
                    "orderItemId",
                    "quantity",
                    "quantityCancelled",
                    "quantityShipped",
                    "totalPrice",
                    "unitPrice"
                ],
                "type": "object",
                "properties": {
                    "orderItemId": {
                        "type": "string",
                        "description": "The id for the order item. One order can have multiple order items, but the list can only take one item.",
                        "example": "2012345678"
                    },
                    "cancellationRequest": {
                        "type": "boolean",
                        "description": "Indicates whether the order was cancelled on request of the customer before the retailer has shipped it.",
                        "example": false
                    },
                    "fulfilment": {
                        "$ref": "#/components/schemas/OrderFulfilment"
                    },
                    "offer": {
                        "$ref": "#/components/schemas/OrderOffer"
                    },
                    "product": {
                        "$ref": "#/components/schemas/OrderProduct"
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "Amount of ordered products for this order item id.",
                        "format": "int32",
                        "example": 10
                    },
                    "quantityShipped": {
                        "type": "integer",
                        "description": "Amount of shipped products for this order item id.",
                        "format": "int32",
                        "example": 10
                    },
                    "quantityCancelled": {
                        "type": "integer",
                        "description": "Amount of cancelled products for this order item id.",
                        "format": "int32",
                        "example": 0
                    },
                    "unitPrice": {
                        "type": "number",
                        "description": "The selling price to the customer of a single unit including VAT.",
                        "example": 12.99
                    },
                    "totalPrice": {
                        "type": "number",
                        "description": "The price the customer paid for the entirety of this item, including VAT.",
                        "example": 78.99
                    },
                    "discounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Discount"
                        }
                    },
                    "commission": {
                        "type": "number",
                        "description": "The commission for all quantities of this order item.",
                        "example": 5.18
                    },
                    "additionalServices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AdditionalService"
                        }
                    },
                    "latestChangedDateTime": {
                        "type": "string",
                        "description": "The date and time in ISO 8601 format when the orderItem was last changed.",
                        "format": "date-time",
                        "example": "2017-02-09T13:39:48+01:00"
                    }
                },
                "description": "Order item details from an order."
            },
            "NotPublishableReason": {
                "required": [
                    "code",
                    "description"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Error code signalling that the offer is invalid.",
                        "example": "4003"
                    },
                    "description": {
                        "type": "string",
                        "description": "Error message describing the reason the offer is invalid.",
                        "example": "The seller is on holiday."
                    }
                }
            },
            "OffersCountryCode": {
                "required": [
                    "countryCode"
                ],
                "type": "object",
                "properties": {
                    "countryCode": {
                        "type": "string",
                        "description": "Countries in which this offer is currently on sale in the webshop, in ISO-3166-1 format.",
                        "example": "NL"
                    }
                }
            },
            "RetailerOffer": {
                "required": [
                    "condition",
                    "ean",
                    "fulfilment",
                    "notPublishableReasons",
                    "offerId",
                    "onHoldByRetailer",
                    "pricing",
                    "stock",
                    "store"
                ],
                "type": "object",
                "properties": {
                    "offerId": {
                        "type": "string",
                        "description": "Unique identifier for an offer.",
                        "example": "6ff736b5-cdd0-4150-8c67-78269ee986f5"
                    },
                    "ean": {
                        "type": "string",
                        "description": "The EAN number associated with this product. Note: in case an ISBN is provided, the ISBN will be replaced with the actual EAN belonging to this ISBN.",
                        "example": "0000007740404"
                    },
                    "reference": {
                        "type": "string",
                        "description": "A user-defined reference that helps you identify this particular offer when receiving data from us. This element can optionally be left empty and has a maximum amount of 100 characters.",
                        "example": "REF12345"
                    },
                    "onHoldByRetailer": {
                        "type": "boolean",
                        "description": "This field specifies whether the retailer has temporarily suspended the listing of this offer on the bol.com website. When set to true, the offer becomes invisible to customers and is not available for purchase. The default setting, false, indicates that the offer is active and visible on the website. This feature is useful for managing inventory or making updates to the offer without permanently removing it from the site.",
                        "example": false
                    },
                    "economicOperatorId": {
                        "type": "string",
                        "description": "An identifier referring to the Economic operator entity (manufacturer, authorized party, importer, distributor or other natural person or legal entity for whom the obligations apply with regards to the manufacturing, or making available on the market of the product in line with the applicable EU laws).",
                        "example": "90bfddc5-a6d0-4986-9253-407b3a6850ca"
                    },
                    "unknownProductTitle": {
                        "type": "string",
                        "description": "In case the item is not known to bol.com you can use this field to identify this particular product. Note: in case the product is known to bol.com, the unknown product title will not be stored.",
                        "example": "Unknown Product Title"
                    },
                    "pricing": {
                        "$ref": "#/components/schemas/Pricing"
                    },
                    "stock": {
                        "$ref": "#/components/schemas/Stock"
                    },
                    "fulfilment": {
                        "$ref": "#/components/schemas/Fulfilment"
                    },
                    "store": {
                        "$ref": "#/components/schemas/Store"
                    },
                    "condition": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "notPublishableReasons": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NotPublishableReason"
                        }
                    }
                }
            },
            "Stock": {
                "required": [
                    "managedByRetailer"
                ],
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "integer",
                        "description": "The amount of stock available for the specified product present in the retailers warehouse. Note: this should not be the FBB stock! Defaults to 0.",
                        "format": "int32",
                        "example": 6
                    },
                    "correctedStock": {
                        "type": "integer",
                        "description": "The amount of order items in stock minus handled order items and minus open order items. As compared to the stock you sent us. When this reaches 0, your offer will not be for sale on the shop.",
                        "format": "int32",
                        "example": 5
                    },
                    "managedByRetailer": {
                        "type": "boolean",
                        "description": "Configures whether the retailer manages the stock levels or that bol.com should calculate the corrected stock based on actual open orders. In case the configuration is set to 'false', all open orders are used to calculate the corrected stock. In case the configuration is set to 'true', only orders that are placed after the last offer update are taken into account.",
                        "example": false
                    }
                }
            },
            "Store": {
                "required": [
                    "visible"
                ],
                "type": "object",
                "properties": {
                    "productTitle": {
                        "type": "string",
                        "description": "The product title for the product associated with this offer.",
                        "example": "Product Title"
                    },
                    "visible": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OffersCountryCode"
                        }
                    }
                }
            },
            "Inventory": {
                "required": [
                    "bsku",
                    "ean",
                    "gradedStock",
                    "regularStock",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "ean": {
                        "type": "string",
                        "description": "The EAN number associated with this product.",
                        "example": "0000007740404"
                    },
                    "bsku": {
                        "type": "string",
                        "description": "The BSKU number associated with this product.",
                        "example": "2950002126612"
                    },
                    "gradedStock": {
                        "type": "integer",
                        "description": "The stock that is not available for sale anymore.",
                        "format": "int32",
                        "example": 10
                    },
                    "regularStock": {
                        "type": "integer",
                        "description": "The stock that is available for sale.",
                        "format": "int32",
                        "example": 10
                    },
                    "title": {
                        "type": "string",
                        "description": "The product title.",
                        "example": "Product Title"
                    }
                }
            },
            "InventoryResponse": {
                "required": [
                    "inventory"
                ],
                "type": "object",
                "properties": {
                    "inventory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Inventory"
                        }
                    }
                }
            },
            "RelatedSearchTerm": {
                "required": [
                    "searchTerm",
                    "total"
                ],
                "type": "object",
                "properties": {
                    "total": {
                        "type": "integer",
                        "description": "The number of customer visits on the search page.",
                        "format": "int32",
                        "example": 100
                    },
                    "searchTerm": {
                        "type": "string",
                        "description": "The search term for which you requested the search volume.",
                        "example": "book"
                    }
                }
            },
            "SearchTerm": {
                "required": [
                    "countries",
                    "periods",
                    "searchTerm",
                    "total",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "searchTerm": {
                        "type": "string",
                        "description": "The search term for which you requested the search volume.",
                        "example": "book"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interpretation of the data that applies to this measurement.",
                        "example": "count"
                    },
                    "total": {
                        "type": "integer",
                        "description": "The number of customer visits on the search page.",
                        "format": "int32",
                        "example": 100
                    },
                    "countries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SearchTermsCountry"
                        }
                    },
                    "periods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TotalPeriod"
                        }
                    },
                    "relatedSearchTerms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RelatedSearchTerm"
                        }
                    }
                }
            },
            "SearchTerms": {
                "type": "object",
                "properties": {
                    "searchTerms": {
                        "$ref": "#/components/schemas/SearchTerm"
                    }
                }
            },
            "SearchTermsCountry": {
                "required": [
                    "countryCode",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "countryCode": {
                        "type": "string",
                        "description": "Countries in which this offer is currently on sale in the webshop in ISO-3166-1 format.",
                        "example": "NL"
                    },
                    "value": {
                        "type": "integer",
                        "description": "The number of customer visits on the search page.",
                        "format": "int32",
                        "example": 100
                    }
                }
            },
            "SearchTermsPeriod": {
                "type": "object",
                "properties": {
                    "day": {
                        "type": "string",
                        "description": "Day number in the ISO-8601 standard.",
                        "example": "19"
                    },
                    "week": {
                        "type": "string",
                        "description": "Week number in the ISO-8601 standard.",
                        "example": "41"
                    },
                    "month": {
                        "type": "string",
                        "description": "Month number in the ISO-8601 standard.",
                        "example": "11"
                    },
                    "year": {
                        "type": "string",
                        "description": "Year number in the ISO-8601 standard.",
                        "example": "2020"
                    }
                }
            },
            "TotalPeriod": {
                "required": [
                    "countries",
                    "period",
                    "total"
                ],
                "type": "object",
                "properties": {
                    "period": {
                        "$ref": "#/components/schemas/SearchTermsPeriod"
                    },
                    "total": {
                        "type": "integer",
                        "description": "The number of customer visits on the search page.",
                        "format": "int32",
                        "example": 100
                    },
                    "countries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SearchTermsCountry"
                        }
                    }
                }
            },
            "Countries": {
                "required": [
                    "maximum",
                    "minimum"
                ],
                "type": "object",
                "properties": {
                    "countryCode": {
                        "type": "string",
                        "description": "Countries in which this offer is currently on sale in the webshop, in ISO-3166-1 format.",
                        "example": "NL"
                    },
                    "minimum": {
                        "type": "number",
                        "description": "Minimum number of estimated sales expectations on the bol.com platform.",
                        "format": "double",
                        "example": 10.5
                    },
                    "maximum": {
                        "type": "number",
                        "description": "Maximum number of estimated sales expectations on the bol.com platform.",
                        "format": "double",
                        "example": 20.5
                    }
                }
            },
            "SalesForecastPeriod": {
                "required": [
                    "countries",
                    "total",
                    "weeksAhead"
                ],
                "type": "object",
                "properties": {
                    "weeksAhead": {
                        "type": "integer",
                        "description": "The number of weeks into the future, starting from today.",
                        "format": "int32",
                        "example": 2
                    },
                    "total": {
                        "$ref": "#/components/schemas/Total"
                    },
                    "countries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Countries"
                        }
                    }
                }
            },
            "SalesForecastResponse": {
                "required": [
                    "countries",
                    "name",
                    "periods",
                    "total",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Indicator name.",
                        "example": "SALES_FORECAST"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interpretation of the data that applies to this measurement.",
                        "example": "DECIMAL"
                    },
                    "total": {
                        "$ref": "#/components/schemas/Total"
                    },
                    "countries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Countries"
                        }
                    },
                    "periods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SalesForecastPeriod"
                        }
                    }
                }
            },
            "Total": {
                "required": [
                    "maximum",
                    "minimum"
                ],
                "type": "object",
                "properties": {
                    "minimum": {
                        "type": "number",
                        "description": "Minimum number of estimated sales expectations on the bol.com platform.",
                        "format": "double",
                        "example": 10.5
                    },
                    "maximum": {
                        "type": "number",
                        "description": "Maximum number of estimated sales expectations on the bol.com platform.",
                        "format": "double",
                        "example": 20.5
                    }
                }
            },
            "ProductRanks": {
                "required": [
                    "hasNextPage",
                    "ranks"
                ],
                "type": "object",
                "properties": {
                    "ranks": {
                        "type": "array",
                        "description": "The list of ranks associated with the product.",
                        "items": {
                            "$ref": "#/components/schemas/Rank"
                        }
                    },
                    "hasNextPage": {
                        "type": "boolean",
                        "description": "Indicator if there is a next page of ranks (true/false).",
                        "example": false
                    }
                }
            },
            "Rank": {
                "required": [
                    "impressions",
                    "rank",
                    "wasSponsored"
                ],
                "type": "object",
                "properties": {
                    "categoryId": {
                        "type": "string",
                        "description": "The ID of the category to which the product belongs.",
                        "example": "53495"
                    },
                    "searchTerm": {
                        "type": "string",
                        "description": "Search term related to the rank.",
                        "example": "dvd"
                    },
                    "wasSponsored": {
                        "type": "boolean",
                        "description": "Indicator if the product is sponsored or not.",
                        "example": false
                    },
                    "rank": {
                        "type": "integer",
                        "description": "The rank of the product in the category or search page.",
                        "format": "int32",
                        "example": 1
                    },
                    "impressions": {
                        "type": "integer",
                        "description": "Number of impressions of the product.",
                        "format": "int32",
                        "example": 100
                    }
                },
                "description": "The list of ranks associated with the product."
            },
            "Details": {
                "required": [
                    "norm",
                    "period"
                ],
                "type": "object",
                "properties": {
                    "period": {
                        "$ref": "#/components/schemas/PerformanceIndicatorPeriod"
                    },
                    "score": {
                        "$ref": "#/components/schemas/Score"
                    },
                    "norm": {
                        "$ref": "#/components/schemas/Norm"
                    }
                },
                "description": "Details of the indicator."
            },
            "Norm": {
                "required": [
                    "condition",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "condition": {
                        "type": "string",
                        "description": "Condition norm for this indicator.",
                        "example": "<=",
                        "enum": [
                            "<=",
                            ">="
                        ]
                    },
                    "value": {
                        "type": "number",
                        "description": "Service norm for this indicator.",
                        "format": "float",
                        "example": 0.6
                    }
                },
                "description": "Service norm for this indicator."
            },
            "PerformanceIndicator": {
                "required": [
                    "details",
                    "name",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Indicator name.",
                        "example": "CANCELLATIONS",
                        "enum": [
                            "CANCELLATIONS",
                            "FULFILMENT",
                            "PHONE_AVAILABILITY",
                            "RESPONSE_TIME",
                            "CASE_ITEM_RATIO",
                            "TRACK_AND_TRACE",
                            "RETURNS",
                            "REVIEWS"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "description": "Interpretation of the data that applies to this measurement.",
                        "example": "PERCENTAGE",
                        "enum": [
                            "PERCENTAGE",
                            "AVERAGE"
                        ]
                    },
                    "details": {
                        "$ref": "#/components/schemas/Details"
                    }
                }
            },
            "PerformanceIndicatorPeriod": {
                "required": [
                    "week",
                    "year"
                ],
                "type": "object",
                "properties": {
                    "week": {
                        "type": "string",
                        "description": "Week number in the ISO-8601 standard.",
                        "example": "05"
                    },
                    "year": {
                        "type": "string",
                        "description": "Year number in the ISO-8601 standard.",
                        "example": "2019"
                    }
                },
                "description": "The period for which the performance is measured."
            },
            "PerformanceIndicators": {
                "required": [
                    "performanceIndicators"
                ],
                "type": "object",
                "properties": {
                    "performanceIndicators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PerformanceIndicator"
                        }
                    }
                }
            },
            "Score": {
                "required": [
                    "conforms",
                    "denominator",
                    "distanceToNorm",
                    "numerator",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "conforms": {
                        "type": "boolean",
                        "description": "Indicates whether the score conforms to the bol.com service norm or not.",
                        "example": true
                    },
                    "numerator": {
                        "type": "integer",
                        "description": "The top part of the fraction (above the line). This usually is the smaller number compared to the denominator.",
                        "format": "int32",
                        "example": 5
                    },
                    "denominator": {
                        "type": "integer",
                        "description": "The lower part of the fraction (below the line). This usually is the larger number compared to the the numerator.",
                        "format": "int32",
                        "example": 10
                    },
                    "value": {
                        "type": "number",
                        "description": "The score for this measurement (denominator divided by the numerator).",
                        "format": "float",
                        "example": 0.5
                    },
                    "distanceToNorm": {
                        "type": "number",
                        "description": "The difference between the score and the bol.com service norm.",
                        "format": "float",
                        "example": 0.1
                    }
                },
                "description": "The score for this measurement. In case there are no scores for an indicator, this element is omitted from the response."
            },
            "OfferInsight": {
                "required": [
                    "countries",
                    "name",
                    "periods",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the requested offer insight.",
                        "example": "BUY_BOX_PERCENTAGE"
                    },
                    "type": {
                        "type": "string",
                        "description": "Interpretation of the data that applies to this measurement.",
                        "example": "percentage"
                    },
                    "total": {
                        "type": "number",
                        "description": "Total number of customer visits on the product page when the offer had the buy box over the requested period (excluding the current day).",
                        "format": "double",
                        "example": 50
                    },
                    "countries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OfferInsightsCountry"
                        }
                    },
                    "periods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Periods"
                        }
                    }
                }
            },
            "OfferInsights": {
                "required": [
                    "offerInsights"
                ],
                "type": "object",
                "properties": {
                    "offerInsights": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OfferInsight"
                        }
                    }
                },
                "description": "Offer insights."
            },
            "OfferInsightsCountry": {
                "required": [
                    "countryCode",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "countryCode": {
                        "type": "string",
                        "description": "Countries in which this offer is currently on sale in the webshop, in ISO-3166-1 format.",
                        "example": "NL"
                    },
                    "value": {
                        "type": "number",
                        "description": "The total value of offer insight.",
                        "format": "double",
                        "example": 100
                    }
                }
            },
            "OfferInsightsPeriod": {
                "required": [
                    "year"
                ],
                "type": "object",
                "properties": {
                    "day": {
                        "type": "integer",
                        "description": "Day of the month.",
                        "format": "int32",
                        "example": 1
                    },
                    "week": {
                        "type": "integer",
                        "description": "Week of the year.",
                        "format": "int32",
                        "example": 49
                    },
                    "month": {
                        "type": "integer",
                        "description": "Month of the year.",
                        "format": "int32",
                        "example": 12
                    },
                    "year": {
                        "type": "integer",
                        "description": "Year.",
                        "format": "int32",
                        "example": 2019
                    }
                }
            },
            "Periods": {
                "required": [
                    "period"
                ],
                "type": "object",
                "properties": {
                    "period": {
                        "$ref": "#/components/schemas/OfferInsightsPeriod"
                    },
                    "total": {
                        "type": "number",
                        "description": "Total number of customer visits on the product page when the offer had the buy box over the requested period (excluding the current day).",
                        "format": "double",
                        "example": 50
                    },
                    "countries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OfferInsightsCountry"
                        }
                    }
                }
            },
            "UploadReportAsset": {
                "required": [
                    "labels",
                    "status",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "The URL of the asset.",
                        "example": "http://example.com"
                    },
                    "labels": {
                        "type": "array",
                        "description": "The label(s) of the asset.",
                        "example": [
                            "FRONT"
                        ],
                        "items": {
                            "type": "string",
                            "description": "The label(s) of the asset.",
                            "example": "[\"FRONT\"]"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "The processing state of the submitted asset.",
                        "example": "DECLINED",
                        "enum": [
                            "IN_PROGRESS",
                            "DECLINED",
                            "PUBLISHED"
                        ]
                    },
                    "subStatus": {
                        "type": "string",
                        "description": "The reason code explaining why the value was rejected.",
                        "example": "DOWNLOAD_FAILED_404",
                        "enum": [
                            "DELETED",
                            "DOWNLOAD_FAILED_404",
                            "DOWNLOAD_FAILED_UNAUTHORIZED",
                            "IMAGE_FLAGGED_AS_DUPLICATE",
                            "IMAGE_RATE_LIMITED",
                            "IMPORT_FAILED",
                            "LABEL_UPDATED",
                            "MATCH_TO_PRODUCT_FAILED",
                            "NOT_VALID_FOR_IMPORT",
                            "PUBLISHED",
                            "RECEIVED",
                            "SCORED_OTHER_IMAGE_WON",
                            "STORED",
                            "SUPPLIED_FLAGGED_AS_BLACKLISTED",
                            "UNKNOWN",
                            "UNPUBLISHED",
                            "UNSUPPORTED_MIMETYPE",
                            "UPLOAD_CANCELLED",
                            "UPLOAD_DEADLINE_REACHED",
                            "UPLOAD_FAILED",
                            "UPLOAD_REJECTED"
                        ]
                    },
                    "subStatusDescription": {
                        "type": "string",
                        "description": "The reason explaining why the value was rejected.",
                        "example": "Failed to download."
                    }
                }
            },
            "UploadReportAttribute": {
                "required": [
                    "id",
                    "status",
                    "values"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The identifier of the attribute for which the value has changed.",
                        "example": "Width"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UploadReportValue"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "The processing state of the submitted attribute.",
                        "example": "DECLINED",
                        "enum": [
                            "IN_PROGRESS",
                            "DECLINED",
                            "PUBLISHED"
                        ]
                    },
                    "subStatus": {
                        "type": "string",
                        "description": "The reason code explaining why the value was rejected.",
                        "example": "INVALID_NUMBER",
                        "enum": [
                            "BLOCKED_BY_RATE_LIMITER",
                            "CREATED",
                            "DEPRECATED",
                            "IDENTICAL_VALUE_AS_BEFORE",
                            "MATCH_TO_PRODUCT_FAILED",
                            "NOT_CHANGED",
                            "NOT_RECENT",
                            "PROCESSING_STARTED",
                            "RECEIVED",
                            "REJECTED",
                            "REJECTED_BY_BRAND_AUTHORITY",
                            "REJECTED_BY_LOGISTIC",
                            "REJECTED_NO_DATA",
                            "REJECTED_UNPROCESSABLE",
                            "SELECTED",
                            "SELECTED_BY_BRAND_AUTHORITY",
                            "SELECTED_BY_LOGISTIC",
                            "SELECTION_DELETED",
                            "SELECTION_MERGED",
                            "TIMED_OUT",
                            "UPDATED",
                            "UPLOADED",
                            "UNKNOWN",
                            "VALID_EAN",
                            "VALIDATED",
                            "VALIDATION_FAILED",
                            "VALIDATION_FAILED_DISABLED_GPC_CODE",
                            "VALIDATION_FAILED_DOES_NOT_EXIST",
                            "VALIDATION_FAILED_INVALID_DATE",
                            "VALIDATION_FAILED_INVALID_EAN",
                            "VALIDATION_FAILED_INVALID_FRACTION",
                            "VALIDATION_FAILED_INVALID_GPC_CODE",
                            "VALIDATION_FAILED_INVALID_INTEGER",
                            "VALIDATION_FAILED_INVALID_ISODATE",
                            "VALIDATION_FAILED_INVALID_ISODATETIME",
                            "VALIDATION_FAILED_INVALID_LOV_VALUE",
                            "VALIDATION_FAILED_INVALID_MULTIPLE_VALUES",
                            "VALIDATION_FAILED_INVALID_NO_VALUES",
                            "VALIDATION_FAILED_INVALID_NUMBER",
                            "VALIDATION_FAILED_INVALID_NUMERIC_TEXT",
                            "VALIDATION_FAILED_INVALID_TEXT",
                            "VALIDATION_FAILED_INVALID_UNIT",
                            "VALIDATION_FAILED_INVALID_URL",
                            "VALIDATION_FAILED_INVALID_VALUES",
                            "VALIDATION_FAILED_NOT_ALLOWED",
                            "VALIDATION_FAILED_UNKNOWN_BASETYPE",
                            "WAITING_FOR_GLOBAL_ID"
                        ]
                    },
                    "subStatusDescription": {
                        "type": "string",
                        "description": "The reason explaining why the value was rejected.",
                        "example": "The provided number is not correct."
                    }
                }
            },
            "UploadReportResponse": {
                "required": [
                    "attributes",
                    "language",
                    "status",
                    "uploadId"
                ],
                "type": "object",
                "properties": {
                    "uploadId": {
                        "type": "string",
                        "description": "The identifier of the upload report.",
                        "example": "3fa90f24-5b44-417f-b212-5cd18ce64c0e"
                    },
                    "language": {
                        "type": "string",
                        "description": "The language in which content is submitted.",
                        "example": "nl",
                        "enum": [
                            "nl",
                            "nl-BE",
                            "fr",
                            "fr-BE"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of the upload report.",
                        "example": "IN_PROGRESS",
                        "enum": [
                            "IN_PROGRESS",
                            "COMPLETED"
                        ]
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UploadReportAttribute"
                        }
                    },
                    "assets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UploadReportAsset"
                        }
                    }
                },
                "description": "Upload report."
            },
            "UploadReportValue": {
                "required": [
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "description": "The value of the attribute.",
                        "example": "14.5"
                    },
                    "unitId": {
                        "type": "string",
                        "description": "The unit identifier of the attribute.",
                        "example": "mm"
                    }
                }
            },
            "Attributes": {
                "required": [
                    "id",
                    "values"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The identifier of the attribute.",
                        "example": "Appearance Name"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Values"
                        }
                    }
                }
            },
            "AudioTracks": {
                "type": "object",
                "properties": {
                    "discNumber": {
                        "type": "string",
                        "description": "The disc number within an album the audio track is stored on.",
                        "example": "1"
                    },
                    "trackNumber": {
                        "type": "string",
                        "description": "The track number on the album.",
                        "example": "14"
                    },
                    "discSide": {
                        "type": "string",
                        "description": "The disc side on which the audio track is stored on.",
                        "example": "A"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the audio track.",
                        "example": "Back home"
                    },
                    "artistName": {
                        "type": "string",
                        "description": "The name of the artist(s) performing the audio track.",
                        "example": "Golden Earring"
                    },
                    "playTime": {
                        "type": "string",
                        "description": "The play time of the audio track.",
                        "example": "3:51"
                    },
                    "clipUrl": {
                        "type": "string",
                        "description": "The URL on which an audio clip of the audio track has been made available.",
                        "example": "https://example.com/ABC.mp3"
                    },
                    "clipType": {
                        "type": "string",
                        "description": "The format in which the audio clip is available.",
                        "example": "mp3"
                    }
                }
            },
            "CatalogProduct": {
                "required": [
                    "attributes",
                    "gpc",
                    "parties",
                    "published"
                ],
                "type": "object",
                "properties": {
                    "published": {
                        "type": "boolean",
                        "description": "Indicates whether the product meets the minimum requirements for publishing to the webshop.",
                        "example": true
                    },
                    "gpc": {
                        "$ref": "#/components/schemas/Gpc"
                    },
                    "enrichment": {
                        "$ref": "#/components/schemas/Enrichment"
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attributes"
                        }
                    },
                    "parties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Party"
                        }
                    },
                    "audioTracks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AudioTracks"
                        }
                    },
                    "series": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Serie"
                        }
                    }
                }
            },
            "Enrichment": {
                "required": [
                    "status"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer",
                        "description": "The current enrichment level of the product.",
                        "format": "int32",
                        "example": 1
                    }
                }
            },
            "Gpc": {
                "required": [
                    "chunkId"
                ],
                "type": "object",
                "properties": {
                    "chunkId": {
                        "type": "string",
                        "description": "The identifier of the current GPC/Product Classification.",
                        "example": "30005965"
                    }
                }
            },
            "Party": {
                "required": [
                    "name",
                    "role",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the party involved for this product.",
                        "example": "Maybelline"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of party involved for this product.",
                        "example": "Brand"
                    },
                    "role": {
                        "type": "string",
                        "description": "The role of the party involved for this product.",
                        "example": "BRAND"
                    }
                }
            },
            "Serie": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the product serie(s) the EAN belongs to.",
                        "example": "Maybelline Lash Sensational"
                    }
                }
            },
            "Values": {
                "required": [
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "description": "The value of the attribute.",
                        "example": "122"
                    },
                    "unitId": {
                        "type": "string",
                        "description": "The unit identifier of the attribute.",
                        "example": "unece.unit.MMT"
                    },
                    "valueId": {
                        "type": "string",
                        "description": "The identifier of the attribute's value. ",
                        "example": "700071825"
                    }
                }
            }
        },
        "securitySchemes": {
            "OAuth2": {
                "type": "http",
                "description": "JWT-based access to api.bol.com",
                "in": "header",
                "scheme": "bearer"
            }
        }
    }
}